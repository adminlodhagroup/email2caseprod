<?xml version="1.0" encoding="UTF-8"?>
<Module>
  <ModulePrefs title=" "
    description=""
	height="340"
    author="Vikash Kumar and Rajkumar"
    author_email="admin@lodhagroup.in"
    author_location="Lodha Excelus, Mahalaxmi, NM JOSHI MARG,Mumbai ">

   

    <!-- This one is not specific to Gmail contextual gadgets. -->
    <Require feature="dynamic-height"/>
	<Require feature="opensocial-0.8" />
	<Require feature="oauthpopup" />
	
	 
    


	 <Require feature="google.contentmatch">
      <Param name="extractors">
        google.com:SenderEmailExtractor,google.com:SubjectExtractor,google.com:EmailBodyExtractor
      </Param>
    </Require>

  </ModulePrefs>
  <Content type="html" view="card">
    <![CDATA[
		<style>
		</style>
		
   <link rel="stylesheet" type="text/css" media="screen, projection" href="https://raw.githubusercontent.com/adminlodhagroup/email2caseprod/master/mycssfile.css"/>
     <!-- Start with Single Sign-On -->
      
	<script type='text/javascript' src='https://ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js'></script>
    <!--  <script type="text/javascript" src="https://example.com/gadgets/sso.js"></script> --> 

	
	
	
	 <script type='text/javascript' src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.10.4/jquery-ui.min.js"></script>
	 <script>
	 (function(c){c.fn.stupidtable=function(b){return this.each(function(){var a=c(this);b=b||{};b=c.extend({},c.fn.stupidtable.default_sort_fns,b);a.on("click.stupidtable","th",function(){var d=c(this),f=0,g=c.fn.stupidtable.dir;a.find("th").slice(0,d.index()).each(function(){var a=c(this).attr("colspan")||1;f+=parseInt(a,10)});var e=d.data("sort-default")||g.ASC;d.data("sort-dir")&&(e=d.data("sort-dir")===g.ASC?g.DESC:g.ASC);var l=d.data("sort")||null;null!==l&&(a.trigger("beforetablesort",{column:f, direction:e}),a.css("display"),setTimeout(function(){var h=[],m=b[l],k=a.children("tbody").children("tr");k.each(function(a,b){var d=c(b).children().eq(f),e=d.data("sort-value"),d="undefined"!==typeof e?e:d.text();h.push([d,b])});h.sort(function(a,b){return m(a[0],b[0])});e!=g.ASC&&h.reverse();k=c.map(h,function(a){return a[1]});a.children("tbody").append(k);a.find("th").data("sort-dir",null).removeClass("sorting-desc sorting-asc");d.data("sort-dir",e).addClass("sorting-"+e);a.trigger("aftertablesort", {column:f,direction:e});a.css("display")},10))})})};c.fn.stupidtable.dir={ASC:"asc",DESC:"desc"};c.fn.stupidtable.default_sort_fns={"int":function(b,a){return parseInt(b,10)-parseInt(a,10)},"float":function(b,a){return parseFloat(b)-parseFloat(a)},string:function(b,a){return b<a?-1:b>a?1:0},"string-ins":function(b,a){b=b.toLowerCase();a=a.toLowerCase();return b<a?-1:b>a?1:0}}})(jQuery);

	 </script>
     <script>


(function($){
    
	$.fn.extend({

		renderCalendar  :   function(s)
		{
			var dc = function(a)
			{
				return document.createElement(a);
			};

			s = $.extend({}, $.fn.datePicker.defaults, s);
			
			if (s.showHeader != $.dpConst.SHOW_HEADER_NONE) {
				var headRow = $(dc('tr'));
				for (var i=Date.firstDayOfWeek; i<Date.firstDayOfWeek+7; i++) {
					var weekday = i%7;
					var day = Date.dayNames[weekday];
					headRow.append(
						jQuery(dc('th')).attr({'scope':'col', 'abbr':day, 'title':day, 'class':(weekday == 0 || weekday == 6 ? 'weekend' : 'weekday')}).html(s.showHeader == $.dpConst.SHOW_HEADER_SHORT ? day.substr(0, 1) : day)
					);
				}
			};
			
			var calendarTable = $(dc('table'))
									.attr(
										{
											'cellspacing':2
										}
									)
									.addClass('jCalendar')
									.append(
										(s.showHeader != $.dpConst.SHOW_HEADER_NONE ? 
											$(dc('thead'))
												.append(headRow)
											:
											dc('thead')
										)
									);
			var tbody = $(dc('tbody'));
			
			var today = (new Date()).zeroTime();
			today.setHours(12);
			
			var month = s.month == undefined ? today.getMonth() : s.month;
			var year = s.year || today.getFullYear();
			
			var currentDate = (new Date(year, month, 1, 12, 0, 0));
			
			
			var firstDayOffset = Date.firstDayOfWeek - currentDate.getDay() + 1;
			if (firstDayOffset > 1) firstDayOffset -= 7;
			var weeksToDraw = Math.ceil(( (-1*firstDayOffset+1) + currentDate.getDaysInMonth() ) /7);
			currentDate.addDays(firstDayOffset-1);
			
			var doHover = function(firstDayInBounds)
			{
				return function()
				{
					if (s.hoverClass) {
						var $this = $(this);
						if (!s.selectWeek) {
							$this.addClass(s.hoverClass);
						} else if (firstDayInBounds && !$this.is('.disabled')) {
							$this.parent().addClass('activeWeekHover');
						}
					}
				}
			};
			var unHover = function()
			{
				if (s.hoverClass) {
					var $this = $(this);
					$this.removeClass(s.hoverClass);
					$this.parent().removeClass('activeWeekHover');
				}
			};

			var w = 0;
			while (w++<weeksToDraw) {
				var r = jQuery(dc('tr'));
				var firstDayInBounds = s.dpController ? currentDate > s.dpController.startDate : false;
				for (var i=0; i<7; i++) {
					var thisMonth = currentDate.getMonth() == month;
					var d = $(dc('td'))
								.text(currentDate.getDate() + '')
								.addClass((thisMonth ? 'current-month ' : 'other-month ') +
													(currentDate.isWeekend() ? 'weekend ' : 'weekday ') +
													(thisMonth && currentDate.getTime() == today.getTime() ? 'today ' : '')
								)
								.data('datePickerDate', currentDate.asString())
								.hover(doHover(firstDayInBounds), unHover)
							;
					r.append(d);
					if (s.renderCallback) {
						s.renderCallback(d, currentDate, month, year);
					}
					
					currentDate = new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate()+1, 12, 0, 0);
				}
				tbody.append(r);
			}
			calendarTable.append(tbody);
			
			return this.each(
				function()
				{
					$(this).empty().append(calendarTable);
				}
			);
		},
/**
 * Create a datePicker associated with each of the matched elements.
 *
 * The matched element will receive a few custom events with the following signatures:
 *
 * dateSelected(event, date, $td, status)
 * Triggered when a date is selected. event is a reference to the event, date is the Date selected, $td is a jquery object wrapped around the TD that was clicked on and status is whether the date was selected (true) or deselected (false)
 * 
 * dpClosed(event, selected)
 * Triggered when the date picker is closed. event is a reference to the event and selected is an Array containing Date objects.
 *
 * dpMonthChanged(event, displayedMonth, displayedYear)
 * Triggered when the month of the popped up calendar is changed. event is a reference to the event, displayedMonth is the number of the month now displayed (zero based) and displayedYear is the year of the month.
 *
 * dpDisplayed(event, $datePickerDiv)
 * Triggered when the date picker is created. $datePickerDiv is the div containing the date picker. Use this event to add custom content/ listeners to the popped up date picker.
 *
 * @param Object s (optional) Customize your date pickers.
 * @option Number month The month to render when the date picker is opened (NOTE that months are zero based). Default is today's month.
 * @option Number year The year to render when the date picker is opened. Default is today's year.
 * @option String|Date startDate The first date date can be selected.
 * @option String|Date endDate The last date that can be selected.
 * @option Boolean inline Whether to create the datePicker as inline (e.g. always on the page) or as a model popup. Default is false (== modal popup)
 * @option Boolean createButton Whether to create a .dp-choose-date anchor directly after the matched element which when clicked will trigger the showing of the date picker. Default is true.
 * @option Boolean showYearNavigation Whether to display buttons which allow the user to navigate through the months a year at a time. Default is true.
 * @option Boolean closeOnSelect Whether to close the date picker when a date is selected. Default is true.
 * @option Boolean displayClose Whether to create a "Close" button within the date picker popup. Default is false.
 * @option Boolean selectMultiple Whether a user should be able to select multiple dates with this date picker. Default is false.
 * @option Number numSelectable The maximum number of dates that can be selected where selectMultiple is true. Default is a very high number.
 * @option Boolean clickInput If the matched element is an input type="text" and this option is true then clicking on the input will cause the date picker to appear.
 * @option Boolean rememberViewedMonth Whether the datePicker should remember the last viewed month and open on it. If false then the date picker will always open with the month for the first selected date visible.
 * @option Boolean selectWeek Whether to select a complete week at a time...
 * @option Number verticalPosition The vertical alignment of the popped up date picker to the matched element. One of $.dpConst.POS_TOP and $.dpConst.POS_BOTTOM. Default is $.dpConst.POS_TOP.
 * @option Number horizontalPosition The horizontal alignment of the popped up date picker to the matched element. One of $.dpConst.POS_LEFT and $.dpConst.POS_RIGHT.
 * @option Number verticalOffset The number of pixels offset from the defined verticalPosition of this date picker that it should pop up in. Default in 0.
 * @option Number horizontalOffset The number of pixels offset from the defined horizontalPosition of this date picker that it should pop up in. Default in 0.
 * @option (Function|Array) renderCallback A reference to a function (or an array of separate functions) that is called as each cell is rendered and which can add classes and event listeners to the created nodes. Each callback function will receive four arguments; a jquery object wrapping the created TD, a Date object containing the date this TD represents, a number giving the currently rendered month and a number giving the currently rendered year. Default is no callback.
 * @option String hoverClass The class to attach to each cell when you hover over it (to allow you to use hover effects in IE6 which doesn't support the :hover pseudo-class on elements other than links). Default is dp-hover. Pass false if you don't want a hover class.
 * @option String autoFocusNextInput Whether focus should be passed onto the next input in the form (true) or remain on this input (false) when a date is selected and the calendar closes
 * @type jQuery
 * @name datePicker
 * @cat plugins/datePicker
 * @author Kelvin Luck (http://www.kelvinluck.com/)
 *
 * @example $('input.date-picker').datePicker();
 * @desc Creates a date picker button next to all matched input elements. When the button is clicked on the value of the selected date will be placed in the corresponding input (formatted according to Date.format).
 *
 * @example demo/index.html
 * @desc See the projects homepage for many more complex examples...
 **/
		datePicker : function(s)
		{			
			if (!$.event._dpCache) $.event._dpCache = [];
			
			// initialise the date picker controller with the relevant settings...
			s = $.extend({}, $.fn.datePicker.defaults, s);
			
			return this.each(
				function()
				{
					var $this = $(this);
					var alreadyExists = true;
					
					if (!this._dpId) {
						this._dpId = $.guid++;
						$.event._dpCache[this._dpId] = new DatePicker(this);
						alreadyExists = false;
					}
					
					if (s.inline) {
						s.createButton = false;
						s.displayClose = false;
						s.closeOnSelect = false;
						$this.empty();
					}
					
					var controller = $.event._dpCache[this._dpId];
					
					controller.init(s);
					
					if (!alreadyExists && s.createButton) {
						// create it!
						controller.button = $('<a href="#" class="dp-choose-date" title="' + $.dpText.TEXT_CHOOSE_DATE + '">' + $.dpText.TEXT_CHOOSE_DATE + '</a>')
								.bind(
									'click',
									function()
									{
										$this.dpDisplay(this);
										this.blur();
										return false;
									}
								);
						$this.after(controller.button);
					}
					
					if (!alreadyExists && $this.is(':text')) {
						$this
							.bind(
								'dateSelected',
								function(e, selectedDate, $td)
								{
									this.value = selectedDate.asString();
								}
							).bind(
								'change',
								function()
								{
									if (this.value == '') {
										controller.clearSelected();
									} else {
										var d = Date.fromString(this.value);
										if (d) {
											controller.setSelected(d, true, true);
										}
									}
								}
							);
						if (s.clickInput) {
							$this.bind(
								'click',
								function()
								{
									// The change event doesn't happen until the input loses focus so we need to manually trigger it...
									$this.trigger('change');
									$this.dpDisplay();
								}
							);
						}
						var d = Date.fromString(this.value);
						if (this.value != '' && d) {
							controller.setSelected(d, true, true);
						}
					}
					
					$this.addClass('dp-applied');
					
				}
			)
		},
/**
 * Disables or enables this date picker
 *
 * @param Boolean s Whether to disable (true) or enable (false) this datePicker
 * @type jQuery
 * @name dpSetDisabled
 * @cat plugins/datePicker
 * @author Kelvin Luck (http://www.kelvinluck.com/)
 *
 * @example $('.date-picker').datePicker();
 * $('.date-picker').dpSetDisabled(true);
 * @desc Prevents this date picker from displaying and adds a class of dp-disabled to it (and it's associated button if it has one) for styling purposes. If the matched element is an input field then it will also set the disabled attribute to stop people directly editing the field.
 **/
		dpSetDisabled : function(s)
		{
			return _w.call(this, 'setDisabled', s);
		},
/**
 * Updates the first selectable date for any date pickers on any matched elements.
 *
 * @param String|Date d A Date object or string representing the first selectable date (formatted according to Date.format).
 * @type jQuery
 * @name dpSetStartDate
 * @cat plugins/datePicker
 * @author Kelvin Luck (http://www.kelvinluck.com/)
 *
 * @example $('.date-picker').datePicker();
 * $('.date-picker').dpSetStartDate('01/01/2000');
 * @desc Creates a date picker associated with all elements with a class of "date-picker" then sets the first selectable date for each of these to the first day of the millenium.
 **/
		dpSetStartDate : function(d)
		{
			return _w.call(this, 'setStartDate', d);
		},
/**
 * Updates the last selectable date for any date pickers on any matched elements.
 *
 * @param String|Date d A Date object or string representing the last selectable date (formatted according to Date.format).
 * @type jQuery
 * @name dpSetEndDate
 * @cat plugins/datePicker
 * @author Kelvin Luck (http://www.kelvinluck.com/)
 *
 * @example $('.date-picker').datePicker();
 * $('.date-picker').dpSetEndDate('01/01/2010');
 * @desc Creates a date picker associated with all elements with a class of "date-picker" then sets the last selectable date for each of these to the first Janurary 2010.
 **/
		dpSetEndDate : function(d)
		{
			return _w.call(this, 'setEndDate', d);
		},
/**
 * Gets a list of Dates currently selected by this datePicker. This will be an empty array if no dates are currently selected or NULL if there is no datePicker associated with the matched element.
 *
 * @type Array
 * @name dpGetSelected
 * @cat plugins/datePicker
 * @author Kelvin Luck (http://www.kelvinluck.com/)
 *
 * @example $('.date-picker').datePicker();
 * alert($('.date-picker').dpGetSelected());
 * @desc Will alert an empty array (as nothing is selected yet)
 **/
		dpGetSelected : function()
		{
			var c = _getController(this[0]);
			if (c) {
				return c.getSelected();
			}
			return null;
		},
/**
 * Selects or deselects a date on any matched element's date pickers. Deselcting is only useful on date pickers where selectMultiple==true. Selecting will only work if the passed date is within the startDate and endDate boundries for a given date picker.
 *
 * @param String|Date d A Date object or string representing the date you want to select (formatted according to Date.format).
 * @param Boolean v Whether you want to select (true) or deselect (false) this date. Optional - default = true.
 * @param Boolean m Whether you want the date picker to open up on the month of this date when it is next opened. Optional - default = true.
 * @param Boolean e Whether you want the date picker to dispatch events related to this change of selection. Optional - default = true.
 * @type jQuery
 * @name dpSetSelected
 * @cat plugins/datePicker
 * @author Kelvin Luck (http://www.kelvinluck.com/)
 *
 * @example $('.date-picker').datePicker();
 * $('.date-picker').dpSetSelected('01/01/2010');
 * @desc Creates a date picker associated with all elements with a class of "date-picker" then sets the selected date on these date pickers to the first Janurary 2010. When the date picker is next opened it will display Janurary 2010.
 **/
		dpSetSelected : function(d, v, m, e)
		{
			if (v == undefined) v=true;
			if (m == undefined) m=true;
			if (e == undefined) e=true;
			return _w.call(this, 'setSelected', Date.fromString(d), v, m, e);
		},
/**
 * Sets the month that will be displayed when the date picker is next opened. If the passed month is before startDate then the month containing startDate will be displayed instead. If the passed month is after endDate then the month containing the endDate will be displayed instead.
 *
 * @param Number m The month you want the date picker to display. Optional - defaults to the currently displayed month.
 * @param Number y The year you want the date picker to display. Optional - defaults to the currently displayed year.
 * @type jQuery
 * @name dpSetDisplayedMonth
 * @cat plugins/datePicker
 * @author Kelvin Luck (http://www.kelvinluck.com/)
 *
 * @example $('.date-picker').datePicker();
 * $('.date-picker').dpSetDisplayedMonth(10, 2008);
 * @desc Creates a date picker associated with all elements with a class of "date-picker" then sets the selected date on these date pickers to the first Janurary 2010. When the date picker is next opened it will display Janurary 2010.
 **/
		dpSetDisplayedMonth : function(m, y)
		{
			return _w.call(this, 'setDisplayedMonth', Number(m), Number(y), true);
		},
/**
 * Displays the date picker associated with the matched elements. Since only one date picker can be displayed at once then the date picker associated with the last matched element will be the one that is displayed.
 *
 * @param HTMLElement e An element that you want the date picker to pop up relative in position to. Optional - default behaviour is to pop up next to the element associated with this date picker.
 * @type jQuery
 * @name dpDisplay
 * @cat plugins/datePicker
 * @author Kelvin Luck (http://www.kelvinluck.com/)
 *
 * @example $('#date-picker').datePicker();
 * $('#date-picker').dpDisplay();
 * @desc Creates a date picker associated with the element with an id of date-picker and then causes it to pop up.
 **/
		dpDisplay : function(e)
		{
			return _w.call(this, 'display', e);
		},
/**
 * Sets a function or array of functions that is called when each TD of the date picker popup is rendered to the page
 *
 * @param (Function|Array) a A function or an array of functions that are called when each td is rendered. Each function will receive four arguments; a jquery object wrapping the created TD, a Date object containing the date this TD represents, a number giving the currently rendered month and a number giving the currently rendered year.
 * @type jQuery
 * @name dpSetRenderCallback
 * @cat plugins/datePicker
 * @author Kelvin Luck (http://www.kelvinluck.com/)
 *
 * @example $('#date-picker').datePicker();
 * $('#date-picker').dpSetRenderCallback(function($td, thisDate, month, year)
 * {
 * 	// do stuff as each td is rendered dependant on the date in the td and the displayed month and year
 * });
 * @desc Creates a date picker associated with the element with an id of date-picker and then creates a function which is called as each td is rendered when this date picker is displayed.
 **/
		dpSetRenderCallback : function(a)
		{
			return _w.call(this, 'setRenderCallback', a);
		},
/**
 * Sets the position that the datePicker will pop up (relative to it's associated element)
 *
 * @param Number v The vertical alignment of the created date picker to it's associated element. Possible values are $.dpConst.POS_TOP and $.dpConst.POS_BOTTOM
 * @param Number h The horizontal alignment of the created date picker to it's associated element. Possible values are $.dpConst.POS_LEFT and $.dpConst.POS_RIGHT
 * @type jQuery
 * @name dpSetPosition
 * @cat plugins/datePicker
 * @author Kelvin Luck (http://www.kelvinluck.com/)
 *
 * @example $('#date-picker').datePicker();
 * $('#date-picker').dpSetPosition($.dpConst.POS_BOTTOM, $.dpConst.POS_RIGHT);
 * @desc Creates a date picker associated with the element with an id of date-picker and makes it so that when this date picker pops up it will be bottom and right aligned to the #date-picker element.
 **/
		dpSetPosition : function(v, h)
		{
			return _w.call(this, 'setPosition', v, h);
		},
/**
 * Sets the offset that the popped up date picker will have from it's default position relative to it's associated element (as set by dpSetPosition)
 *
 * @param Number v The vertical offset of the created date picker.
 * @param Number h The horizontal offset of the created date picker.
 * @type jQuery
 * @name dpSetOffset
 * @cat plugins/datePicker
 * @author Kelvin Luck (http://www.kelvinluck.com/)
 *
 * @example $('#date-picker').datePicker();
 * $('#date-picker').dpSetOffset(-20, 200);
 * @desc Creates a date picker associated with the element with an id of date-picker and makes it so that when this date picker pops up it will be 20 pixels above and 200 pixels to the right of it's default position.
 **/
		dpSetOffset : function(v, h)
		{
			return _w.call(this, 'setOffset', v, h);
		},

		dpClose : function()
		{
			return _w.call(this, '_closeCalendar', false, this[0]);
		},
/**
 * Rerenders the date picker's current month (for use with inline calendars and renderCallbacks).
 *
 * @type jQuery
 * @name dpRerenderCalendar
 * @cat plugins/datePicker
 * @author Kelvin Luck (http://www.kelvinluck.com/)
 *
 **/
		dpRerenderCalendar : function()
		{
			return _w.call(this, '_rerenderCalendar');
		},
		// private function called on unload to clean up any expandos etc and prevent memory links...
		_dpDestroy : function()
		{
			// TODO - implement this?
		}
	});
	
	// private internal function to cut down on the amount of code needed where we forward
	// dp* methods on the jQuery object on to the relevant DatePicker controllers...
	var _w = function(f, a1, a2, a3, a4)
	{
		return this.each(
			function()
			{
				var c = _getController(this);
				if (c) {
					c[f](a1, a2, a3, a4);
				}
			}
		);
	};
	
	function DatePicker(ele)
	{
		this.ele = ele;
		
		// initial values...
		this.displayedMonth		=	null;
		this.displayedYear		=	null;
		this.startDate			=	null;
		this.endDate			=	null;
		this.showYearNavigation	=	null;
		this.closeOnSelect		=	null;
		this.displayClose		=	null;
		this.rememberViewedMonth=	null;
		this.selectMultiple		=	null;
		this.numSelectable		=	null;
		this.numSelected		=	null;
		this.verticalPosition	=	null;
		this.horizontalPosition	=	null;
		this.verticalOffset		=	null;
		this.horizontalOffset	=	null;
		this.button				=	null;
		this.renderCallback		=	[];
		this.selectedDates		=	{};
		this.inline				=	null;
		this.context			=	'#dp-popup';
		this.settings			=	{};
	};
	$.extend(
		DatePicker.prototype,
		{	
			init : function(s)
			{
				this.setStartDate(s.startDate);
				this.setEndDate(s.endDate);
				this.setDisplayedMonth(Number(s.month), Number(s.year));
				this.setRenderCallback(s.renderCallback);
				this.showYearNavigation = s.showYearNavigation;
				this.closeOnSelect = s.closeOnSelect;
				this.displayClose = s.displayClose;
				this.rememberViewedMonth =	s.rememberViewedMonth;
				this.selectMultiple = s.selectMultiple;
				this.numSelectable = s.selectMultiple ? s.numSelectable : 1;
				this.numSelected = 0;
				this.verticalPosition = s.verticalPosition;
				this.horizontalPosition = s.horizontalPosition;
				this.hoverClass = s.hoverClass;
				this.setOffset(s.verticalOffset, s.horizontalOffset);
				this.inline = s.inline;
				this.settings = s;
				if (this.inline) {
					this.context = this.ele;
					this.display();
				}
			},
			setStartDate : function(d)
			{
				if (d) {
					if (d instanceof Date) {
						this.startDate = d;
					} else {
						this.startDate = Date.fromString(d);
					}
				}
				if (!this.startDate) {
					this.startDate = (new Date()).zeroTime();
				}
				this.setDisplayedMonth(this.displayedMonth, this.displayedYear);
			},
			setEndDate : function(d)
			{
				if (d) {
					if (d instanceof Date) {
						this.endDate = d;
					} else {
						this.endDate = Date.fromString(d);
					}
				}
				if (!this.endDate) {
					this.endDate = (new Date('12/31/2999')); // using the JS Date.parse function which expects mm/dd/yyyy
				}
				if (this.endDate.getTime() < this.startDate.getTime()) {
					this.endDate = this.startDate;
				}
				this.setDisplayedMonth(this.displayedMonth, this.displayedYear);
			},
			setPosition : function(v, h)
			{
				this.verticalPosition = v;
				this.horizontalPosition = h;
			},
			setOffset : function(v, h)
			{
				this.verticalOffset = parseInt(v) || 0;
				this.horizontalOffset = parseInt(h) || 0;
			},
			setDisabled : function(s)
			{
				$e = $(this.ele);
				$e[s ? 'addClass' : 'removeClass']('dp-disabled');
				if (this.button) {
					$but = $(this.button);
					$but[s ? 'addClass' : 'removeClass']('dp-disabled');
					$but.attr('title', s ? '' : $.dpText.TEXT_CHOOSE_DATE);
				}
				if ($e.is(':text')) {
					$e.attr('disabled', s ? 'disabled' : '');
				}
			},
			setDisplayedMonth : function(m, y, rerender)
			{
				if (this.startDate == undefined || this.endDate == undefined) {
					return;
				}
				var s = new Date(this.startDate.getTime());
				s.setDate(1);
				var e = new Date(this.endDate.getTime());
				e.setDate(1);
				
				var t;
				if ((!m && !y) || (isNaN(m) && isNaN(y))) {
					// no month or year passed - default to current month
					t = new Date().zeroTime();
					t.setDate(1);
				} else if (isNaN(m)) {
					// just year passed in - presume we want the displayedMonth
					t = new Date(y, this.displayedMonth, 1);
				} else if (isNaN(y)) {
					// just month passed in - presume we want the displayedYear
					t = new Date(this.displayedYear, m, 1);
				} else {
					// year and month passed in - that's the date we want!
					t = new Date(y, m, 1)
				}
				// check if the desired date is within the range of our defined startDate and endDate
				if (t.getTime() < s.getTime()) {
					t = s;
				} else if (t.getTime() > e.getTime()) {
					t = e;
				}
				var oldMonth = this.displayedMonth;
				var oldYear = this.displayedYear;
				this.displayedMonth = t.getMonth();
				this.displayedYear = t.getFullYear();

				if (rerender && (this.displayedMonth != oldMonth || this.displayedYear != oldYear))
				{
					this._rerenderCalendar();
					$(this.ele).trigger('dpMonthChanged', [this.displayedMonth, this.displayedYear]);
				}
			},
			setSelected : function(d, v, moveToMonth, dispatchEvents)
			{
				if (d < this.startDate || d.zeroTime() > this.endDate.zeroTime()) {
					// Don't allow people to select dates outside range...
					return;
				}
				var s = this.settings;
				if (s.selectWeek)
				{
					d = d.addDays(- (d.getDay() - Date.firstDayOfWeek + 7) % 7);
					if (d < this.startDate) // The first day of this week is before the start date so is unselectable...
					{
						return;
					}
				}
				if (v == this.isSelected(d)) // this date is already un/selected
				{
					return;
				}
				if (this.selectMultiple == false) {
					this.clearSelected();
				} else if (v && this.numSelected == this.numSelectable) {
					// can't select any more dates...
					return;
				}
				if (moveToMonth && (this.displayedMonth != d.getMonth() || this.displayedYear != d.getFullYear())) {
					this.setDisplayedMonth(d.getMonth(), d.getFullYear(), true);
				}
				this.selectedDates[d.asString()] = v;
				this.numSelected += v ? 1 : -1;
				var selectorString = 'td.' + (d.getMonth() == this.displayedMonth ? 'current-month' : 'other-month');
				var $td;
				$(selectorString, this.context).each(
					function()
					{
						if ($(this).data('datePickerDate') == d.asString()) {
							$td = $(this);
							if (s.selectWeek)
							{
								$td.parent()[v ? 'addClass' : 'removeClass']('selectedWeek');
							}
							$td[v ? 'addClass' : 'removeClass']('selected'); 
						}
					}
				);
				$('td', this.context).not('.selected')[this.selectMultiple &&  this.numSelected == this.numSelectable ? 'addClass' : 'removeClass']('unselectable');
				
				if (dispatchEvents)
				{
					var s = this.isSelected(d);
					$e = $(this.ele);
					var dClone = Date.fromString(d.asString());
					$e.trigger('dateSelected', [dClone, $td, s]);
					$e.trigger('change');
				}
			},
			isSelected : function(d)
			{
				return this.selectedDates[d.asString()];
			},
			getSelected : function()
			{
				var r = [];
				for(var s in this.selectedDates) {
					if (this.selectedDates[s] == true) {
						r.push(Date.fromString(s));
					}
				}
				return r;
			},
			clearSelected : function()
			{
				this.selectedDates = {};
				this.numSelected = 0;
				$('td.selected', this.context).removeClass('selected').parent().removeClass('selectedWeek');
			},
			display : function(eleAlignTo)
			{
				if ($(this.ele).is('.dp-disabled')) return;
				
				eleAlignTo = eleAlignTo || this.ele;
				var c = this;
				var $ele = $(eleAlignTo);
				var eleOffset = $ele.offset();
				
				var $createIn;
				var attrs;
				var attrsCalendarHolder;
				var cssRules;
				
				if (c.inline) {
					$createIn = $(this.ele);
					attrs = {
						'id'		:	'calendar-' + this.ele._dpId,
						'class'	:	'dp-popup dp-popup-inline'
					};

					$('.dp-popup', $createIn).remove();
					cssRules = {
					};
				} else {
					$createIn = $('body');
					attrs = {
						'id'		:	'dp-popup',
						'class'	:	'dp-popup'
					};
					cssRules = {
						'top'	:	eleOffset.top + c.verticalOffset,
						'left'	:	eleOffset.left + c.horizontalOffset
					};
					
					var _checkMouse = function(e)
					{
						var el = e.target;
						var cal = $('#dp-popup')[0];
						
						while (true){
							if (el == cal) {
								return true;
							} else if (el == document) {
								c._closeCalendar();
								return false;
							} else {
								el = $(el).parent()[0];
							}
						}
					};
					this._checkMouse = _checkMouse;
					
					c._closeCalendar(true);
					$(document).bind(
						'keydown.datepicker', 
						function(event)
						{
							if (event.keyCode == 27) {
								c._closeCalendar();
							}
						}
					);
				}
				
				if (!c.rememberViewedMonth)
				{
					var selectedDate = this.getSelected()[0];
					if (selectedDate) {
						selectedDate = new Date(selectedDate);
						this.setDisplayedMonth(selectedDate.getMonth(), selectedDate.getFullYear(), false);
					}
				}
				
				$createIn
					.append(
						$('<div></div>')
							.attr(attrs)
							.css(cssRules)
							.append(
//								$('<a href="#" class="selecteee">aaa</a>'),
								$('<h2></h2>'),
								$('<div class="dp-nav-prev"></div>')
									.append(
										$('<a class="dp-nav-prev-year" href="#" title="' + $.dpText.TEXT_PREV_YEAR + '">&lt;&lt;</a>')
											.bind(
												'click',
												function()
												{
													return c._displayNewMonth.call(c, this, 0, -1);
												}
											),
										$('<a class="dp-nav-prev-month" href="#" title="' + $.dpText.TEXT_PREV_MONTH + '">&lt;</a>')
											.bind(
												'click',
												function()
												{
													return c._displayNewMonth.call(c, this, -1, 0);
												}
											)
									),
								$('<div class="dp-nav-next"></div>')
									.append(
										$('<a class="dp-nav-next-year" href="#" title="' + $.dpText.TEXT_NEXT_YEAR + '">&gt;&gt;</a>')
											.bind(
												'click',
												function()
												{
													return c._displayNewMonth.call(c, this, 0, 1);
												}
											),
										$('<a class="dp-nav-next-month" href="#" title="' + $.dpText.TEXT_NEXT_MONTH + '">&gt;</a>')
											.bind(
												'click',
												function()
												{
													return c._displayNewMonth.call(c, this, 1, 0);
												}
											)
									),
								$('<div class="dp-calendar"></div>')
							)
							.bgIframe()
						);
					
				var $pop = this.inline ? $('.dp-popup', this.context) : $('#dp-popup');
				
				if (this.showYearNavigation == false) {
					$('.dp-nav-prev-year, .dp-nav-next-year', c.context).css('display', 'none');
				}
				if (this.displayClose) {
					$pop.append(
						$('<a href="#" id="dp-close">' + $.dpText.TEXT_CLOSE + '</a>')
							.bind(
								'click',
								function()
								{
									c._closeCalendar();
									return false;
								}
							)
					);
				}
				c._renderCalendar();

				$(this.ele).trigger('dpDisplayed', $pop);
				
				if (!c.inline) {
					if (this.verticalPosition == $.dpConst.POS_BOTTOM) {
						$pop.css('top', eleOffset.top + $ele.height() - $pop.height() + c.verticalOffset);
					}
					if (this.horizontalPosition == $.dpConst.POS_RIGHT) {
						$pop.css('left', eleOffset.left + $ele.width() - $pop.width() + c.horizontalOffset);
					}
//					$('.selectee', this.context).focus();
					$(document).bind('mousedown.datepicker', this._checkMouse);
				}
				
			},
			setRenderCallback : function(a)
			{
				if (a == null) return;
				if (a && typeof(a) == 'function') {
					a = [a];
				}
				this.renderCallback = this.renderCallback.concat(a);
			},
			cellRender : function ($td, thisDate, month, year) {
				var c = this.dpController;
				var d = new Date(thisDate.getTime());
				
				// add our click handlers to deal with it when the days are clicked...
				
				$td.bind(
					'click',
					function()
					{
						var $this = $(this);
						if (!$this.is('.disabled')) {
							c.setSelected(d, !$this.is('.selected') || !c.selectMultiple, false, true);
							if (c.closeOnSelect) {
								// Focus the next input in the formÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã¢â‚¬ ÃƒÂ¢Ã¢â€šÂ¬Ã¢â€žÂ¢ÃƒÆ’Ã†â€™ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã†â€™Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡Ãƒâ€šÃ‚Â¬ÃƒÆ’Ã¢â‚¬Â¦Ãƒâ€šÃ‚Â¡ÃƒÆ’Ã†â€™ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¬ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â‚¬Å¡Ã‚Â¬Ãƒâ€¦Ã‚Â¡ÃƒÆ’Ã†â€™ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¦
								if (c.settings.autoFocusNextInput) {
									var ele = c.ele;
									var found = false;
									$(':input', ele.form).each(
										function()
										{
											if (found) {
												$(this).focus();
												return false;
											}
											if (this == ele) {
												found = true;
											}
										}
									);
								} else {
									try {
										c.ele.focus();
									} catch (e) {}
								}
								c._closeCalendar();
							}
						}
					}
				);
				if (c.isSelected(d)) {
					$td.addClass('selected');
					if (c.settings.selectWeek)
					{
						$td.parent().addClass('selectedWeek');
					}
				} else  if (c.selectMultiple && c.numSelected == c.numSelectable) {
					$td.addClass('unselectable');
				}
				
			},
			_applyRenderCallbacks : function()
			{
				var c = this;
				$('td', this.context).each(
					function()
					{
						for (var i=0; i<c.renderCallback.length; i++) {
							$td = $(this);
							c.renderCallback[i].apply(this, [$td, Date.fromString($td.data('datePickerDate')), c.displayedMonth, c.displayedYear]);
						}
					}
				);
				return;
			},
			// ele is the clicked button - only proceed if it doesn't have the class disabled...
			// m and y are -1, 0 or 1 depending which direction we want to go in...
			_displayNewMonth : function(ele, m, y) 
			{
				if (!$(ele).is('.disabled')) {
					this.setDisplayedMonth(this.displayedMonth + m, this.displayedYear + y, true);
				}
				ele.blur();
				return false;
			},
			_rerenderCalendar : function()
			{
				this._clearCalendar();
				this._renderCalendar();
			},
			_renderCalendar : function()
			{
				// set the title...
				$('h2', this.context).html((new Date(this.displayedYear, this.displayedMonth, 1)).asString($.dpText.HEADER_FORMAT));
				
				// render the calendar...
				$('.dp-calendar', this.context).renderCalendar(
					$.extend(
						{},
						this.settings, 
						{
							month			: this.displayedMonth,
							year			: this.displayedYear,
							renderCallback	: this.cellRender,
							dpController	: this,
							hoverClass		: this.hoverClass
						})
				);
				
				// update the status of the control buttons and disable dates before startDate or after endDate...
				// TODO: When should the year buttons be disabled? When you can't go forward a whole year from where you are or is that annoying?
				if (this.displayedYear == this.startDate.getFullYear() && this.displayedMonth == this.startDate.getMonth()) {
					$('.dp-nav-prev-year', this.context).addClass('disabled');
					$('.dp-nav-prev-month', this.context).addClass('disabled');
					$('.dp-calendar td.other-month', this.context).each(
						function()
						{
							var $this = $(this);
							if (Number($this.text()) > 20) {
								$this.addClass('disabled');
							}
						}
					);
					var d = this.startDate.getDate();
					$('.dp-calendar td.current-month', this.context).each(
						function()
						{
							var $this = $(this);
							if (Number($this.text()) < d) {
								$this.addClass('disabled');
							}
						}
					);
				} else {
					$('.dp-nav-prev-year', this.context).removeClass('disabled');
					$('.dp-nav-prev-month', this.context).removeClass('disabled');
					var d = this.startDate.getDate();
					if (d > 20) {
						// check if the startDate is last month as we might need to add some disabled classes...
						var st = this.startDate.getTime();
						var sd = new Date(st);
						sd.addMonths(1);
						if (this.displayedYear == sd.getFullYear() && this.displayedMonth == sd.getMonth()) {
							$('.dp-calendar td.other-month', this.context).each(
								function()
								{
									var $this = $(this);
									if (Date.fromString($this.data('datePickerDate')).getTime() < st) {
										$this.addClass('disabled');
									}
								}
							);
						}
					}
				}
				if (this.displayedYear == this.endDate.getFullYear() && this.displayedMonth == this.endDate.getMonth()) {
					$('.dp-nav-next-year', this.context).addClass('disabled');
					$('.dp-nav-next-month', this.context).addClass('disabled');
					$('.dp-calendar td.other-month', this.context).each(
						function()
						{
							var $this = $(this);
							if (Number($this.text()) < 14) {
								$this.addClass('disabled');
							}
						}
					);
					var d = this.endDate.getDate();
					$('.dp-calendar td.current-month', this.context).each(
						function()
						{
							var $this = $(this);
							if (Number($this.text()) > d) {
								$this.addClass('disabled');
							}
						}
					);
				} else {
					$('.dp-nav-next-year', this.context).removeClass('disabled');
					$('.dp-nav-next-month', this.context).removeClass('disabled');
					var d = this.endDate.getDate();
					if (d < 13) {
						// check if the endDate is next month as we might need to add some disabled classes...
						var ed = new Date(this.endDate.getTime());
						ed.addMonths(-1);
						if (this.displayedYear == ed.getFullYear() && this.displayedMonth == ed.getMonth()) {
							$('.dp-calendar td.other-month', this.context).each(
								function()
								{
									var $this = $(this);
									var cellDay = Number($this.text());
									if (cellDay < 13 && cellDay > d) {
										$this.addClass('disabled');
									}
								}
							);
						}
					}
				}
				this._applyRenderCallbacks();
			},
			_closeCalendar : function(programatic, ele)
			{
				if (!ele || ele == this.ele)
				{
					$(document).unbind('mousedown.datepicker');
					$(document).unbind('keydown.datepicker');
					this._clearCalendar();
					$('#dp-popup a').unbind();
					$('#dp-popup').empty().remove();
					if (!programatic) {
						$(this.ele).trigger('dpClosed', [this.getSelected()]);
					}
				}
			},
			// empties the current dp-calendar div and makes sure that all events are unbound
			// and expandos removed to avoid memory leaks...
			_clearCalendar : function()
			{
				// TODO.
				$('.dp-calendar td', this.context).unbind();
				$('.dp-calendar', this.context).empty();
			}
		}
	);
	
	// static constants
	$.dpConst = {
		SHOW_HEADER_NONE	:	0,
		SHOW_HEADER_SHORT	:	1,
		SHOW_HEADER_LONG	:	2,
		POS_TOP				:	0,
		POS_BOTTOM			:	1,
		POS_LEFT			:	0,
		POS_RIGHT			:	1,
		DP_INTERNAL_FOCUS	:	'dpInternalFocusTrigger'
	};
	// localisable text
	$.dpText = {
		TEXT_PREV_YEAR		:	'Previous year',
		TEXT_PREV_MONTH		:	'Previous month',
		TEXT_NEXT_YEAR		:	'Next year',
		TEXT_NEXT_MONTH		:	'Next month',
		TEXT_CLOSE			:	'Close',
		TEXT_CHOOSE_DATE	:	'Choose date',
		HEADER_FORMAT		:	'mmmm yyyy'
	};
	// version
	$.dpVersion = '$Id$';

	$.fn.datePicker.defaults = {
		month				: undefined,
		year				: undefined,
		showHeader			: $.dpConst.SHOW_HEADER_SHORT,
		startDate			: undefined,
		endDate				: undefined,
		inline				: false,
		renderCallback		: null,
		createButton		: true,
		showYearNavigation	: true,
		closeOnSelect		: true,
		displayClose		: false,
		selectMultiple		: false,
		numSelectable		: Number.MAX_VALUE,
		clickInput			: false,
		rememberViewedMonth	: true,
		selectWeek			: false,
		verticalPosition	: $.dpConst.POS_TOP,
		horizontalPosition	: $.dpConst.POS_LEFT,
		verticalOffset		: 0,
		horizontalOffset	: 0,
		hoverClass			: 'dp-hover',
		autoFocusNextInput  : false
	};

	function _getController(ele)
	{
		if (ele._dpId) return $.event._dpCache[ele._dpId];
		return false;
	};
	
	// make it so that no error is thrown if bgIframe plugin isn't included (allows you to use conditional
	// comments to only include bgIframe where it is needed in IE without breaking this plugin).
	if ($.fn.bgIframe == undefined) {
		$.fn.bgIframe = function() {return this; };
	};


	// clean-up
	$(window)
		.bind('unload', function() {
			var els = $.event._dpCache || [];
			for (var i in els) {
				$(els[i].ele)._dpDestroy();
			}
		});
		
	
})(jQuery);

/*
 * Date prototype extensions. Doesn't depend on any
 * other code. Doens't overwrite existing methods.
 *
 * Adds dayNames, abbrDayNames, monthNames and abbrMonthNames static properties and isLeapYear,
 * isWeekend, isWeekDay, getDaysInMonth, getDayName, getMonthName, getDayOfYear, getWeekOfYear,
 * setDayOfYear, addYears, addMonths, addDays, addHours, addMinutes, addSeconds methods
 *
 
 *
 * Additional methods and properties added by Kelvin Luck: firstDayOfWeek, dateFormat, zeroTime, asString, fromString -
 * I've added my name to these methods so you know who to blame if they are broken!
 * 
 * Dual licensed under the MIT and GPL licenses:
 *   http://www.opensource.org/licenses/mit-license.php
 *   http://www.gnu.org/licenses/gpl.html
 *
 */

/**
 * An Array of day names starting with Sunday.
 * 
 * @example dayNames[0]
 * @result 'Sunday'
 *
 * @name dayNames
 * @type Array
 * @cat Plugins/Methods/Date
 */
Date.dayNames = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];

/**
 * An Array of abbreviated day names starting with Sun.
 * 
 * @example abbrDayNames[0]
 * @result 'Sun'
 *
 * @name abbrDayNames
 * @type Array
 * @cat Plugins/Methods/Date
 */
Date.abbrDayNames = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];

/**
 * An Array of month names starting with Janurary.
 * 
 * @example monthNames[0]
 * @result 'January'
 *
 * @name monthNames
 * @type Array
 * @cat Plugins/Methods/Date
 */
Date.monthNames = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];

/**
 * An Array of abbreviated month names starting with Jan.
 * 
 * @example abbrMonthNames[0]
 * @result 'Jan'
 *
 * @name monthNames
 * @type Array
 * @cat Plugins/Methods/Date
 */
Date.abbrMonthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];

/**
 * The first day of the week for this locale.
 *
 * @name firstDayOfWeek
 * @type Number
 * @cat Plugins/Methods/Date
 * @author Kelvin Luck
 */
Date.firstDayOfWeek = 1;

/**
 * The format that string dates should be represented as (e.g. 'dd/mm/yyyy' for UK, 'mm/dd/yyyy' for US, 'yyyy-mm-dd' for Unicode etc).
 *
 * @name format
 * @type String
 * @cat Plugins/Methods/Date
 * @author Kelvin Luck
 */
Date.format = 'dd/mm/yyyy';


/**
 * The first two numbers in the century to be used when decoding a two digit year. Since a two digit year is ambiguous (and date.setYear
 * only works with numbers < 99 and so doesn't allow you to set years after 2000) we need to use this to disambiguate the two digit year codes.
 *
 * @name format
 * @type String
 * @cat Plugins/Methods/Date
 * @author Kelvin Luck
 */
Date.fullYearStart = '20';

(function() {

	/**
	 * Adds a given method under the given name 
	 * to the Date prototype if it doesn't
	 * currently exist.
	 *
	 * @private
	 */
	function add(name, method) {
		if( !Date.prototype[name] ) {
			Date.prototype[name] = method;
		}
	};
	
	/**
	 * Checks if the year is a leap year.
	 *
	 * @example var dtm = new Date("01/12/2008");
	 * dtm.isLeapYear();
	 * @result true
	 *
	 * @name isLeapYear
	 * @type Boolean
	 * @cat Plugins/Methods/Date
	 */
	add("isLeapYear", function() {
		var y = this.getFullYear();
		return (y%4==0 && y%100!=0) || y%400==0;
	});
	
	/**
	 * Checks if the day is a weekend day (Sat or Sun).
	 *
	 * @example var dtm = new Date("01/12/2008");
	 * dtm.isWeekend();
	 * @result false
	 *
	 * @name isWeekend
	 * @type Boolean
	 * @cat Plugins/Methods/Date
	 */
	add("isWeekend", function() {
		return this.getDay()==0 || this.getDay()==6;
	});
	
	/**
	 * Check if the day is a day of the week (Mon-Fri)
	 * 
	 * @example var dtm = new Date("01/12/2008");
	 * dtm.isWeekDay();
	 * @result false
	 * 
	 * @name isWeekDay
	 * @type Boolean
	 * @cat Plugins/Methods/Date
	 */
	add("isWeekDay", function() {
		return !this.isWeekend();
	});
	
	/**
	 * Gets the number of days in the month.
	 * 
	 * @example var dtm = new Date("01/12/2008");
	 * dtm.getDaysInMonth();
	 * @result 31
	 * 
	 * @name getDaysInMonth
	 * @type Number
	 * @cat Plugins/Methods/Date
	 */
	add("getDaysInMonth", function() {
		return [31,(this.isLeapYear() ? 29:28),31,30,31,30,31,31,30,31,30,31][this.getMonth()];
	});
	
	/**
	 * Gets the name of the day.
	 * 
	 * @example var dtm = new Date("01/12/2008");
	 * dtm.getDayName();
	 * @result 'Saturday'
	 * 
	 * @example var dtm = new Date("01/12/2008");
	 * dtm.getDayName(true);
	 * @result 'Sat'
	 * 
	 * @param abbreviated Boolean When set to true the name will be abbreviated.
	 * @name getDayName
	 * @type String
	 * @cat Plugins/Methods/Date
	 */
	add("getDayName", function(abbreviated) {
		return abbreviated ? Date.abbrDayNames[this.getDay()] : Date.dayNames[this.getDay()];
	});

	/**
	 * Gets the name of the month.
	 * 
	 * @example var dtm = new Date("01/12/2008");
	 * dtm.getMonthName();
	 * @result 'Janurary'
	 *
	 * @example var dtm = new Date("01/12/2008");
	 * dtm.getMonthName(true);
	 * @result 'Jan'
	 * 
	 * @param abbreviated Boolean When set to true the name will be abbreviated.
	 * @name getDayName
	 * @type String
	 * @cat Plugins/Methods/Date
	 */
	add("getMonthName", function(abbreviated) {
		return abbreviated ? Date.abbrMonthNames[this.getMonth()] : Date.monthNames[this.getMonth()];
	});

	/**
	 * Get the number of the day of the year.
	 * 
	 * @example var dtm = new Date("01/12/2008");
	 * dtm.getDayOfYear();
	 * @result 11
	 * 
	 * @name getDayOfYear
	 * @type Number
	 * @cat Plugins/Methods/Date
	 */
	add("getDayOfYear", function() {
		var tmpdtm = new Date("1/1/" + this.getFullYear());
		return Math.floor((this.getTime() - tmpdtm.getTime()) / 86400000);
	});
	
	/**
	 * Get the number of the week of the year.
	 * 
	 * @example var dtm = new Date("01/12/2008");
	 * dtm.getWeekOfYear();
	 * @result 2
	 * 
	 * @name getWeekOfYear
	 * @type Number
	 * @cat Plugins/Methods/Date
	 */
	add("getWeekOfYear", function() {
		return Math.ceil(this.getDayOfYear() / 7);
	});

	/**
	 * Set the day of the year.
	 * 
	 * @example var dtm = new Date("01/12/2008");
	 * dtm.setDayOfYear(1);
	 * dtm.toString();
	 * @result 'Tue Jan 01 2008 00:00:00'
	 * 
	 * @name setDayOfYear
	 * @type Date
	 * @cat Plugins/Methods/Date
	 */
	add("setDayOfYear", function(day) {
		this.setMonth(0);
		this.setDate(day);
		return this;
	});
	
	/**
	 * Add a number of years to the date object.
	 * 
	 * @example var dtm = new Date("01/12/2008");
	 * dtm.addYears(1);
	 * dtm.toString();
	 * @result 'Mon Jan 12 2009 00:00:00'
	 * 
	 * @name addYears
	 * @type Date
	 * @cat Plugins/Methods/Date
	 */
	add("addYears", function(num) {
		this.setFullYear(this.getFullYear() + num);
		return this;
	});
	
	/**
	 * Add a number of months to the date object.
	 * 
	 * @example var dtm = new Date("01/12/2008");
	 * dtm.addMonths(1);
	 * dtm.toString();
	 * @result 'Tue Feb 12 2008 00:00:00'
	 * 
	 * @name addMonths
	 * @type Date
	 * @cat Plugins/Methods/Date
	 */
	add("addMonths", function(num) {
		var tmpdtm = this.getDate();
		
		this.setMonth(this.getMonth() + num);
		
		if (tmpdtm > this.getDate())
			this.addDays(-this.getDate());
		
		return this;
	});
	
	/**
	 * Add a number of days to the date object.
	 * 
	 * @example var dtm = new Date("01/12/2008");
	 * dtm.addDays(1);
	 * dtm.toString();
	 * @result 'Sun Jan 13 2008 00:00:00'
	 * 
	 * @name addDays
	 * @type Date
	 * @cat Plugins/Methods/Date
	 */
	add("addDays", function(num) {
		var timezoneOffsetBefore = this.getTimezoneOffset(),
			timezoneOffsetAfter;
        this.setTime(this.getTime() + (num*86400000) );
        timezoneOffsetAfter = this.getTimezoneOffset();

        // If the timezone has changed between days then adjust the time to reflect this
        if(timezoneOffsetAfter !== timezoneOffsetBefore){
                this.setTime(this.getTime() + ((timezoneOffsetAfter-timezoneOffsetBefore) * 60 * 1000));
        }
		return this;
	});
	
	/**
	 * Add a number of hours to the date object.
	 * 
	 * @example var dtm = new Date("01/12/2008");
	 * dtm.addHours(24);
	 * dtm.toString();
	 * @result 'Sun Jan 13 2008 00:00:00'
	 * 
	 * @name addHours
	 * @type Date
	 * @cat Plugins/Methods/Date
	 */
	add("addHours", function(num) {
		this.setHours(this.getHours() + num);
		return this;
	});

	/**
	 * Add a number of minutes to the date object.
	 * 
	 * @example var dtm = new Date("01/12/2008");
	 * dtm.addMinutes(60);
	 * dtm.toString();
	 * @result 'Sat Jan 12 2008 01:00:00'
	 * 
	 * @name addMinutes
	 * @type Date
	 * @cat Plugins/Methods/Date
	 */
	add("addMinutes", function(num) {
		this.setMinutes(this.getMinutes() + num);
		return this;
	});
	
	/**
	 * Add a number of seconds to the date object.
	 * 
	 * @example var dtm = new Date("01/12/2008");
	 * dtm.addSeconds(60);
	 * dtm.toString();
	 * @result 'Sat Jan 12 2008 00:01:00'
	 * 
	 * @name addSeconds
	 * @type Date
	 * @cat Plugins/Methods/Date
	 */
	add("addSeconds", function(num) {
		this.setSeconds(this.getSeconds() + num);
		return this;
	});
	
	/**
	 * Sets the time component of this Date to zero for cleaner, easier comparison of dates where time is not relevant.
	 * 
	 * @example var dtm = new Date();
	 * dtm.zeroTime();
	 * dtm.toString();
	 * @result 'Sat Jan 12 2008 00:01:00'
	 * 
	 * @name zeroTime
	 * @type Date
	 * @cat Plugins/Methods/Date
	 * @author Kelvin Luck
	 */
	add("zeroTime", function() {
		this.setMilliseconds(0);
		this.setSeconds(0);
		this.setMinutes(0);
		this.setHours(0);
		return this;
	});
	
	/**
	 * Returns a string representation of the date object according to Date.format.
	 * (Date.toString may be used in other places so I purposefully didn't overwrite it)
	 * 
	 * @example var dtm = new Date("01/12/2008");
	 * dtm.asString();
	 * @result '12/01/2008' // (where Date.format == 'dd/mm/yyyy'
	 * 
	 * @name asString
	 * @type Date
	 * @cat Plugins/Methods/Date
	 * @author Kelvin Luck
	 */
	add("asString", function(format) {
		var r = format || Date.format;
		return r
			.split('yyyy').join(this.getFullYear())
			.split('yy').join((this.getFullYear() + '').substring(2))
			.split('dd').join(_zeroPad(this.getDate()))
			.split('d').join(this.getDate())
			.split('DD').join(this.getDayName(false))
			.split('D').join(this.getDayName(true))
			.split('mmmm').join(this.getMonthName(false))
			.split('mmm').join(this.getMonthName(true))
			.split('mm').join(_zeroPad(this.getMonth()+1))
			.split('hh').join(_zeroPad(this.getHours()))
			.split('min').join(_zeroPad(this.getMinutes()))
			.split('ss').join(_zeroPad(this.getSeconds()));
	});
	
	/**
	 * Returns a new date object created from the passed String according to Date.format or false if the attempt to do this results in an invalid date object
	 * (We can't simple use Date.parse as it's not aware of locale and I chose not to overwrite it incase it's functionality is being relied on elsewhere)
	 *
	 * @example var dtm = Date.fromString("12/01/2008");
	 * dtm.toString();
	 * @result 'Sat Jan 12 2008 00:00:00' // (where Date.format == 'dd/mm/yyyy'
	 * 
	 * @name fromString
	 * @type Date
	 * @cat Plugins/Methods/Date
	 * @author Kelvin Luck
	 */
	Date.fromString = function(s, format)
	{
		var f = format || Date.format,
		    d = new Date('01/01/1977'),
		    mLength = 0,
		    iM, iD, iY,
		    i, mStr;

		iM = f.indexOf('mmmm');
		if (iM > -1) {
			for (i=0; i<Date.monthNames.length; i++) {
				mStr = s.substr(iM, Date.monthNames[i].length);
				if (Date.monthNames[i] == mStr) {
					mLength = Date.monthNames[i].length - 4;
					break;
				}
			}
			d.setMonth(i);
		} else {
			iM = f.indexOf('mmm');
			if (iM > -1) {
				mStr = s.substr(iM, 3);
				for (i=0; i<Date.abbrMonthNames.length; i++) {
					if (Date.abbrMonthNames[i] == mStr) break;
				}
				d.setMonth(i);
			} else {
				d.setMonth(Number(s.substr(f.indexOf('mm'), 2)) - 1);
			}
		}
		
		iY = f.indexOf('yyyy');

		if (iY > -1) {
			if (iM < iY)
			{
				iY += mLength;
			}
			d.setFullYear(Number(s.substr(iY, 4)));
		} else {
			if (iM < iY)
			{
				iY += mLength;
			}
			// TODO - this doesn't work very well - are there any rules for what is meant by a two digit year?
			d.setFullYear(Number(Date.fullYearStart + s.substr(f.indexOf('yy'), 2)));
		}
		iD = f.indexOf('dd');
		if (iM < iD)
		{
			iD += mLength;
		}
		d.setDate(Number(s.substr(iD, 2)));
		if (isNaN(d.getTime())) {
			return false;
		}
		return d;
	};
	
	// utility method
	var _zeroPad = function(num) {
		var s = '0'+num;
		return s.substring(s.length-2)
		//return ('0'+num).substring(-2); // doesn't work on IE :(
	};
	
})();

</script>	
	  <script type="text/javascript">
//Changing here 
		var crn_no;
		function getUserRole(emailk)
{

 
  var formData1 = {emails:emailk};
	
		var urluserrole="https://email2case.lodhagroup.com:8443/lodhagadgetsalesforce/getUserRole.jsp?emails="+emailk+"";
    
		$.ajax({  

		type: "GET",
		contentType: "application/json;charset=UTF-8",
		mimeType: 'application/json;charset=UTF-8',
		url:urluserrole,
		data: formData1,
		dataType: "jsonp",
	  
		jsonpCallback: 'xyz',
		
		beforeSend: function(xhr) {

		xhr.setRequestHeader("Accept", "application/json");

		xhr.setRequestHeader("Content-Type", "application/json");

		xhr.setRequestHeader('Access-Control-Allow-Origin', '*');
				  
		xhr.setRequestHeader('Access-Control-Allow-Methods', 'GET');
		},
		success: function(data){
		if(data.result =="CENTRAL")
		{	
    
	
		$("#userrole").removeClass('hideselect');
	
         $("#CREATECASE111111").addClass('hideselect');
         $("#ADDTOEXIST").addClass('hideselect');
 
		}
		else if (data.result =="RM") 
		{

		
		
		
		}
		else
		{
		
		
		}
		
		}

		,error: function(data){ 
		
		}

		});
      function xyz(sas){}
}	
   
		
		function getBasicDetails(email1_id)
		{
					$("#content_div").text("Loading....");
			
			var urlssss = "https://email2case.lodhagroup.com:8443/lodhagadgetsalesforce/rest/test/get/"+email1_id;

			$.ajax({  
				type: "GET",
				contentType: "application/json",
				
				url:urlssss,
				dataType: "jsonp",
			
				data : {"email_id":email1_id},
				jsonpCallback: 'AccountDetail',
			
				beforeSend: function(xhr) {
					xhr.setRequestHeader("Accept", "application/json");
					xhr.setRequestHeader("Content-Type", "application/json");
					xhr.setRequestHeader('Access-Control-Allow-Origin', '*');
					xhr.setRequestHeader('Access-Control-Allow-Methods', 'GET');
				},
				success: function(data){ 
				
					if( data.crn_no!="" &&  data.crn_no!=null)
					{				
					
               crn_no = data.crn_no;
			   
						var html = "";
						html += "<br/><ul>";
						html += "<li> <b>Flat Number : </b>"+ data.flatno + "</li>";
						html += "<li> <b> Mobile Number: </b>"+ data.mobile_no + "</li>";
						html += "<li> <b> Project Name: </b>" + data.project_name + "</li>";
						html += "<li> <b> Email: </b>"+ email1_id.replace(/dot/g,'.') + "</li>";
			  html += "<li> <b> CRN Number: </b>"+ data.crn_no + "</li>"
						html+= "</ul>";
					
					  document.getElementById('content_div').innerHTML = html;
											  
					}
               else
               {
               $("#content_div").text("No Data Found.");
               
               }
            
               
				 },
				 error : function(json){
					 
					for(var i = 0; i < json.length; i++) {
						var obj = json[i];

						console.log(obj);
					}
					 
					 
				 }
			 });
			
		
		}
		function getCaseDetailsbyRegEmail(email)
{
 var formData = {email_ids:email,subs:email};
                         
var url="https://email2case.lodhagroup.com:8443/lodhagadgetsalesforce/getAccountCaseDetails.jsp";
$("#overlay4").css("display","block");
 $("#imgmodal4").css("display","block");
$.ajax({  

			type: "GET",
			contentType: "application/json;charset=UTF-8",
			mimeType: 'application/json;charset=UTF-8',
			url:url,
			data: formData ,
			dataType: "jsonp",
			traditional: true,
			jsonpCallback: 'person',

                        beforeSend: function(xhr) {

        xhr.setRequestHeader("Accept", "application/json");

        xhr.setRequestHeader("Content-Type", "application/json");

                                  xhr.setRequestHeader('Access-Control-Allow-Origin', '*');
                                                  
          xhr.setRequestHeader('Access-Control-Allow-Methods', 'GET');
    },
             success: function(data){
			 $("#overlay4").css("display","none");
 $("#imgmodal4").css("display","none");
	
       $('#maintable1').find("tr:gt(0)").remove();
	    $('#txtspanclosedcases').text(data.casenumbers.length);
		 $('#closedCasesCountDiv').text(data.closedCases);

	   if(data.casenumbers.length ==0)
	   {
	   $('#maintable1 tbody').append('<tr>No Data Found </tr>');
	   }
			  for(var i = 0; i < data.casenumbers.length; i++)
                                                        {
														var product = data.casenumbers[i];
                                                      
                                                                split = product.split(';');
															
                                                                caseno = split[0];
                                                                status = split[1];
                                                                caseage = split[2];
                                                                casesum =  split[3]; 
																reql111=  split[4];
																reql222 =  split[5]
																communication_type=  split[6];
                                                id=  split[7];
                                                var DateTime =split[8]; 
                                                var natofreq = split[9];
                                                var crn= split[10];
                                                //<td>'+caseage+'</td>
                                var xyz = '<a href="https://eu1.salesforce.com/'+id+'" target="_blank" >'+caseno+'</a>';
							
									$('#maintable1 tbody').append('<tr><td class="lalign">'+crn+'</td><td>'+xyz+'</td><td>'+status+'</td><td>'+natofreq+'</td><td>'+reql111+'</td><td>'+reql222+'</td><td>'+DateTime+'</td></tr>');                  
														

								
														}
			  var table1= $('#maintable1').stupidtable();
 table1.bind('aftertablesort', function (event, data) {
    // data.column - the index of the column sorted after a click
    // data.direction - the sorting direction (either asc or desc)
 
    var th = $(this).find("th");
    th.find(".arrow").remove();

    var arrow = data.direction === "asc" ? "&#8593;" : "&#8595;";
    th.eq(data.column).find('span').remove();
    th.eq(data.column).append('<span class="arrowsort">' + arrow +'</span>');
});

			 },error: function(data){ //alert("ZYXXsadX"+data.crn_no);
			 
			 $("#overlay4").css("display","none");
 $("#imgmodal4").css("display","none");
          }
			 
			 });

}
		
		function getRegisteredUser(email_id3)
		{
		
		var casenos =	$("input:radio[name='casenum']:checked").val();
				var urlreguser ="https://email2case.lodhagroup.com:8443/lodhagadgetsalesforce/getRegUser.jsp";
				var formData3 = {emid:email_id3};
		
				
				$.ajax({ 
					type: "GET",
					contentType: "application/json;charset=UTF-8",
					mimeType: 'application/json;charset=UTF-8',
					url:urlreguser,
					data: formData3 ,
					dataType: "jsonp",
					async:   false,
					jsonpCallback: 'person',
					
					beforeSend: function(xhr) {
						xhr.setRequestHeader("Accept", "application/json");
						xhr.setRequestHeader("Content-Type", "application/json;charset=UTF-8");
						xhr.setRequestHeader('Access-Control-Allow-Origin', '*');
						xhr.setRequestHeader('Access-Control-Allow-Methods', 'GET');
					},
						success: function(data){ 
							return data.result;
						},
						error : function(d){
						 
						}
				});
		  
			
		
		}
		
		//Function will search for the random values
		function getBasicRandomDetails(params)
		{
		
    
			$("#content_div").text("Loading....");
		var urlz ="https://email2case.lodhagroup.com:8443/lodhagadgetsalesforce/rest/test/get/random/"+params;

			 var formDatacc = {email_id:params};
		

 $("#overlay").css("display","block");
 $("#imgmodal").css("display","block");
$("#content_div").removeClass("content_div_invisible").addClass("content_div_visible");
    $.ajax({  type: "GET",
              contentType: "application/json",
          
              url:urlz,
              dataType: "jsonp",
             
			  traditional : true,
               data : formDatacc,
               jsonpCallback: 'AccountDetail',
             
			beforeSend: function(xhr) {

        xhr.setRequestHeader("Accept", "application/json");

        xhr.setRequestHeader("Content-Type", "application/json");

                                  xhr.setRequestHeader('Access-Control-Allow-Origin', '*');
                                                  
          xhr.setRequestHeader('Access-Control-Allow-Methods', 'GET');
    },
  success: function(data){
			 
 $("#overlay").css("display","none");
 $("#imgmodal").css("display","none");
			 var sText = '';

			sText += "<table id=\"report\" cellpadding=\"0\" cellspacing=\"0\"><thead>";
        
         	sText += "<tr><th>Action</th><th>CRN</th><th>Name</th><th  style=\"display:none\">Consideration Value</th><th>RM Name</th><th  style=\"display:none\">RM Email</th><th>Mobile No</th><th>Project Name</th><th  style=\"display:none\">Flat No</th><th>Wing</th><th  style=\"display:none\">Status</th><th  style=\"display:none\">Cluster</th><th  style=\"display:none\">JodiFlat</th><th  style=\"display:none\">Oasys Flat code</th><th>Type</th></tr></thead>";
         
     
//Modified for new fieds Prashant start
if(data.list.length ==0)
      {
        $("#content_div").text("No Data Found");
      }
	  else if(data.list.length ==1 && data.list[0].crn_no == "0000000"){
	 
  
          
      $("#content_div").text("There are too many records for given search term. Search again with more terms to narrow down the results");
      }
 
      else
      {
			    	$.each(data.list, function (index, value) {
					
					
					if(data.list[index].typeres =="ACC")
					{
					var typeacc ="Booked Account";
				
					if(data.list[index].crn_no == "null" || data.list[index].crn_no == null )
					{
						typeacc ="Person Account";
					}
         
             sText += "<tr class=\"odd\" title=\"\" id="+index+"><td><input type=\"radio\" name=\"cb\" id='cb"+index+"' value=\"" + data.list[index].crn_no + "\" /></td>";
         		sText += "<td>" + data.list[index].crn_no + "</td>";
         		sText += "<td>" + data.list[index].cusname + "</td>";
         		sText += "<td  style=\"display:none\" >" + parseFloat(data.list[index].consideration_value).toFixed(1) + "</td>";
         			sText += "<td>" +data.list[index].rmname + "</td>";
         		sText += "<td  style=\"display:none\">" +data.list[index].rmemail + "</td>";
				sText +="<td>" +data.list[index].mobile_no  + "</td>";
				sText +="<td>" +data.list[index].project_name  + "</td>";
				sText +="<td  style=\"display:none\">" +data.list[index].flatno + "</td>";
             	sText +="<td>" +data.list[index].wingno+ "</td>";
                  sText +="<td  style=\"display:none\">" +data.list[index].accstatus+ "</td>";
                    sText +="<td  style=\"display:none\">" +data.list[index].acccluster+ "</td>";
                      sText +="<td  style=\"display:none\">" +data.list[index].jodiflat+ "</td>";
				 sText +="<td  style=\"display:none\" >-</td>";
				 sText +="<td>"+typeacc+"</td>";
				 sText +="<td  style=\"display:none\"> <div class=\"triangle-left\"> </div></td>";
				
				
				
			
				}
				else
				{
				sText += "<tr title=\"\" id="+index+"><td><input type=\"radio\" name=\"cb\" id='cb"+index+"' value=\"" + data.list[index].oppid + "\" /></td>";
         		sText += "<td>-</td>";
         		sText += "<td>" + data.list[index].oppName + "</td>";
				sText += "<td  style=\"display:none\">" + parseFloat(data.list[index].consideration_value).toFixed(1) + "</td>";
		sText += "<td>" +data.list[index].rmname + "</td>";
         		sText += "<td  style=\"display:none\">" +data.list[index].rmemail + "</td>";
					sText +="<td>" +data.list[index].oppmobile_no + "</td>";
				sText +="<td>" +data.list[index].oppproject_name  + "</td>";
				sText +="<td  style=\"display:none\">" +data.list[index].oppflatno + "</td>";
         sText +="<td>" +data.list[index].oppwingno+ "</td>";
                  sText +="<td  style=\"display:none\">" +data.list[index].oppaccstatus+ "</td>";
                  sText +="<td  style=\"display:none\">" +data.list[index].oppcluster+ "</td>";
         	   sText +="<td  style=\"display:none\">&nbsp</td>";
                sText +="<td  style=\"display:none\">" +data.list[index].oasysflatcodes+ "</td>";
				sText +="<td >Opportunity</td>";
				 sText +="<td  style=\"display:none\"> <div class=\"triangle-left\"> </div></td>";
         	           
            		}
				
                   });
				   
         	sText += "</table>";
			
				$("#content_div").html(sText);
   
  


}

$(".popover33333333333333333").hover(function() { },
  function () {
  $('.popover').css("display","none");
 

  } );
  
  
//Modified for new fieds Prashant
$("#report33333333333333333 tr").not(':first').hover(
  function () {
	var thisTr =  $('input[name="cb"]:checked').parent();
		    	
	var crndshead =$(this).closest('table').find('th').eq(1).text();		
    var crnds = $(this).children().eq(1).text();
	
	var Nameshead =$(this).closest('table').find('th').eq(2).text();
	var Names = $(this).children().eq(2).text();
	
	var consi_valHead =$(this).closest('table').find('th').eq(3).text();
	var consi_val = $(this).children().eq(3).text();
	
	var rm_name2Head =$(this).closest('table').find('th').eq(4).text();
	var rm_name2 = $(this).children().eq(4).text();
	
	var rm_emailHead =$(this).closest('table').find('th').eq(5).text();
	var rm_email = $(this).children().eq(5).text();
	
	var mobile_no1Head =$(this).closest('table').find('th').eq(6).text();
	var mobile_no1 = $(this).children().eq(6).text();
	
	var proj_name1Head =$(this).closest('table').find('th').eq(7).text();
	var proj_name1 = $(this).children().eq(7).text();
	
	var flat_no1Head =$(this).closest('table').find('th').eq(8).text();
	var flat_no1 = $(this).children().eq(8).text();
	
	var wing_no1Head =$(this).closest('table').find('th').eq(9).text();
	var wing_no1 = $(this).children().eq(9).text();
	
	var stat1Head =$(this).closest('table').find('th').eq(10).text();
	var stat1 = $(this).children().eq(10).text();
	
	var clusHead =$(this).closest('table').find('th').eq(11).text();
	var clus = $(this).children().eq(11).text();
	
	
	var JodiFlat1Head =$(this).closest('table').find('th').eq(12).text();
	var JodiFlat1 = $(this).children().eq(12).text();
	
	
	var OasysFlatcode1Head =$(this).closest('table').find('th').eq(13).text();
	var OasysFlatcode1 = $(this).children().eq(13).text();
	var RecTypes = $(this).children().eq(14).text();
	//JodiFlat	OasysFlatcode1
	
	
	
	
	$('#DET').find('h3').remove();
	$('#DET').find('label').remove();
	$('#DET').find('span').remove();

	$('#DET').append('<h3>'+RecTypes+'</h3>');

	$('#DET').append('<label>'+crndshead+'</label>');
	$('#DET').append('<span>'+crnds+'</span>');
	
	
	$('#DET').append('<label>'+Nameshead+'</label>');
	$('#DET').append('<span>'+Names+'</span>');
	
	$('#DET').append('<label>'+consi_valHead+'</label>');
	$('#DET').append('<span>'+consi_val+'</span>');
	
	
	$('#DET').append('<label>'+rm_name2Head+'</label>');
	$('#DET').append('<span>'+rm_name2+'</span>');
	
	
	$('#DET').append('<label>'+rm_emailHead+'</label>');
	$('#DET').append('<span>'+rm_email+'</span>');
	
	$('#DET').append('<label>'+mobile_no1Head+'</label>');
	$('#DET').append('<span>'+mobile_no1+'</span>');
	
	$('#DET').append('<label>'+proj_name1Head+'</label>');
	$('#DET').append('<span>'+proj_name1+'</span>');
	
	
	
	$('#DET').append('<label>'+flat_no1Head+'</label>');
	$('#DET').append('<span>'+flat_no1+'</span>');
	
	
	
	$('#DET').append('<label>'+wing_no1Head+'</label>');
	$('#DET').append('<span>'+wing_no1+'</span>');
	
	
	
	$('#DET').append('<label>'+stat1Head+'</label>');
	$('#DET').append('<span>'+stat1+'</span>');
	
	
	$('#DET').append('<label>'+clusHead+'</label>');
	$('#DET').append('<span>'+clus+'</span>');
	
	
	
	$('#DET').append('<label>'+JodiFlat1Head+'</label>');
	$('#DET').append('<span>'+JodiFlat1+'</span>');
	
	
	
	$('#DET').append('<label>'+OasysFlatcode1Head+'</label>');
	$('#DET').append('<span>'+OasysFlatcode1+'</span>');
	 
     var pos = $(this).position();
     
     var width = $(this).outerWidth();


$(this).children().eq(15).css("display","block");
     $('.popover').css({
      top: pos.left+ (pos.top/2) -78 + "px",
    	  left :371 +"px",
         position: "absolute",
         "visibility":"visible",
         "display":"block"
     });
	
	
	
	
  }, 
  function () {

 
$(this).children().eq(15).css("display","none");
  }
);


             },
             error : function(json){
             $("#overlay").css("display","none");
 $("#imgmodal").css("display","none");
                 
                for(var i = 0; i < json.length; i++) {
    var obj = json[i];

    console.log(obj);
			}       
             }
			 
			 
			 
			 
         });
		 }
       //this will show popup if the user is having the CIP status.
	function getCancelledcasestatuspopup(emails)
   {
   
   
                     var urlCancuser ="https://email2case.lodhagroup.com:8443/lodhagadgetsalesforce/CancelledUser.jsp";
                                var formData4 = {em:emails};


  $.ajax({ 
                                        type: "GET",
                                        contentType: "application/json;charset=UTF-8",
                                        mimeType: 'application/json;charset=UTF-8',
                                        url:urlCancuser,
                                        data: formData4 ,
                                        dataType: "jsonp",
                                        async:   false,
                                        jsonpCallback: 'gg',
                                        // lovelyjohn1974@gmail.com
                                        beforeSend: function(xhr) {
                                                xhr.setRequestHeader("Accept", "application/json");
                                                xhr.setRequestHeader("Content-Type", "application/json;charset=UTF-8");
                                                xhr.setRequestHeader('Access-Control-Allow-Origin', '*');
                                                xhr.setRequestHeader('Access-Control-Allow-Methods', 'GET');
                                        },
                                                success: function(data22){ 
													if(data22.result !="false")
													{
                                                        alert(data22.result);
													}
													else
													{
													}							

												/*Added for new message for confirmation of the user prompt 25 July 2014*/		
												if(data22.Cancelleduser !="false")
												{
												
													//Please Note that the customer is Cancelled. Do you still want to continue? 

													var r = confirm("Please Note that the customer is Cancelled. Do you still want to continue?");
													if (r == true) {
													//	x = "You pressed OK!";
															$('body').removeClass('overmemodal');
															$("#overlay10").css("display","none");

													} else {
														$('body').addClass('overmemodal');
														$('body').css("display","block");	
															$("#overlay10").css("display","block");
														//.overmemodal
													}			
												}

												/*Added for new message for confirmation of the user prompt 25 July 2014*/


													
                                                },
                                                error : function(d){
                                                      
                                                }
                                });
   
    function gg(jss){}
   
   
   
   }
   function bindButtonClick()
   {
   $("#submitattach").click();
   
   
   }
	function showCreateCase(showstab)
	{

	if(showstab == "CREATECASE")
	{
	
	$("#ATTACHTOCASE").hide();
	$("#Create_Case1").show();
	}
	else
	{
		$("#Create_Case1").hide();
		$("#ATTACHTOCASE").show();
	}
	
	}	
		 
		function validatingRM(project,froms,divstoshow,wing_name_1,acctypes_2)
	{
	

	var urlvalRM1 = "https://email2case.lodhagroup.com:8443/lodhagadgetsalesforce/validattionRM.jsp";
		
		
					var formDatavalrm = {proj:project,wing:wing_name_1,acctype:acctypes_2};
			var flag ="false";
			$.ajax({ 
					type: "GET",
					contentType: "application/json;charset=UTF-8",
					mimeType: 'application/json;charset=UTF-8',
					url:urlvalRM1,
					traditional: true,
					data: formDatavalrm ,
					dataType: "jsonp",
					async:false,
					jsonpCallback: 'validationRM',
					beforeSend: function(xhr) {
						xhr.setRequestHeader("Accept", "application/json");
						xhr.setRequestHeader("Content-Type", "application/json;charset=UTF-8");
						xhr.setRequestHeader('Access-Control-Allow-Origin', '*');
						xhr.setRequestHeader('Access-Control-Allow-Methods', 'GET');
					},
					success: function(data){ 
					
			
      
				if(data.result =="NO")
				 {
				 	alert("Technical error occured. Can't proceed with tagging. Please get in tough with system admin.");
					return false;
				 }
				 
				 
				 
				 $.each( data.listof, function( i, listof ) {
				
					if (data.listof[i] == froms)
					{
						flag="true";
						
					}
					
				

				});				  
				  
				  
				  if(flag =="true")
				  {
		
				  }
				  else
				  {
				
					alert("Sorry, you do not have sufficient privileges to create case for selected customer. Please check your selection.");
						return false;

				  }
				  
				  showCreateCase(divstoshow);
				  
					},
					error : function(json){
				
					}
				});
				function validationRM(jss){}
		
	
	}
		 //Datepicker 
		 Date.firstDayOfWeek = 0;
		//Date.format = 'mm/dd/yyyy';
		
		 var hours = new Date().getHours();
		var time = new Date().getSeconds();
		var min = new Date().getMinutes();

    var mid='AM';
    if(hours==0 || hours==24){ //At 00 hours we need to show 12 am
		hours=12;
    }
    else if(hours >= 12 ){
    hours=hours -12;
	
	if(hours <=9)
		hours = "0"+hours;
	
	
	
    mid='PM';
    }
	
	var hoursmin = hours + ":"+min+" "+ mid;

	
		$(document).ready(function(){
		
		 $("#verticalmenu li a").bind('click',function(){
                        var divtoshow = $(this).attr("href");
                        $(".tabcontent").hide();
                        $(divtoshow).show();
                    }); 
                    
                    $("#verticalmenu li").bind('click',function(){
                        $("#verticalmenu li").addClass("menuimage");
                        $("#verticalmenu li").removeClass("selectedmenu");
                        $(this).addClass("selectedmenu");
                    });
					
      	$('.date-pick').datePicker({startDate:'01/01/1996'});
		$('.date-pick').change(function() {
		this.value = this.value + " "  +hoursmin;
		});
	  
	  $('.commongroup1').hide();
			$('.grievgroup').hide();
			$('.complaintngroup').hide();
    
      $( ".column.button1" ).click( function( e ) {
      
      
    
      } ); 
	  
	  //Validation on Nature of request
	   $('#natreq').change(function(){
			var getValue=$(this).val();
			
			if(getValue =="3" ) 
			{
			
			$('.commongroup1').show();
			$('.complaintngroup').show();
			$('.grievgroup').hide();
		
//Needs Approval From Director		
			}
			else if( getValue =="8")
			{
			
			$('.commongroup1').show();
			$('.grievgroup').show();
			$('.complaintngroup').hide();
			
			//	Case Summary
		//Case Resolution
		//Date Of Grievance
			
			}
			else
			{
			$('.commongroup1').hide();
			$('.grievgroup').hide();
			$('.complaintngroup').hide();
			}
			
		});
	  
	  
	  
	  
	   $('input[type=radio][name=casetype]').change(function() {
	 
	    if (this.value == "2") {
		 $("#ddlSubRequest").hide();
		 $("#reql1").hide();
		$("#reql2label").hide();
		$("#reql1label").hide();
		
 
		
        }
        else {
		 $("#ddlSubRequest").show();
		 $("#reql1").show();
		$("#reql2label").show();
		$("#reql1label").show();
				
       
        }
    });
	
    
			
   
			$("#Create_Case1").hide();
			$("#ATTACHTOCASE").hide();
			
      //   FORWARDTO  Email will be stored in the database
        $("#FORWARDTO").click(function()
			{
       
     	var thisTr =  $('input[name="cb"]:checked').parent().parent();
		var rmname_1 = thisTr.children().eq(4).text();
        var rmemail_1 = thisTr.children().eq(5).text();
        
        if($('input[name="cb"]:checked').val() == null || $('input[name="cb"]:checked').val() =="" || $('input[name="cb"]:checked').val() =="null"  || $('input[name="cb"]:checked').val() ==undefined)
        {
        
      
        alert("No account selected. Please select appropriate account to forward the email.");
        
        return false;
        }
    
        var urlforward="https://email2case.lodhagroup.com:8443/lodhagadgetsalesforce/ForwardTo.jsp";
        
        
        var formData = {rmemail:rmemail_1,rmname:rmname_1,sub:subject,crn:$('input[name="cb"]:checked').val(),msgid:msg_id};
			
				
$("#overlay6").css("display","block");
				$("#imgmodal6").css("display","block");				
				$.ajax({ 
					type: "GET",
					contentType: "application/json;charset=UTF-8",
					mimeType: 'application/json;charset=UTF-8',
					url:urlforward,
					data: formData ,
					dataType: "jsonp",
					async:   false,
					jsonpCallback: 'person',
					// lovelyjohn1974@gmail.com
					beforeSend: function(xhr) {
						xhr.setRequestHeader("Accept", "application/json");
						xhr.setRequestHeader("Content-Type", "application/json;charset=UTF-8");
						xhr.setRequestHeader('Access-Control-Allow-Origin', '*');
						xhr.setRequestHeader('Access-Control-Allow-Methods', 'GET');
					},
						success: function(datax){ 
						$("#overlay6").css("display","none");
				$("#imgmodal6").css("display","none");	
             							alert(datax.result);
						},
						error : function(d){
							$("#overlay6").css("display","none");
				$("#imgmodal6").css("display","none");	
						  
						}
				});
		
   
       });  
         
			//GLOBAL SEARCH BUTTON
			$("#SUBMITSEARCH").click(function()
			{
       $("#maintable5 tr").remove();
         
      
			 var params = $("#inpname").val();
			 if(params.indexOf(".") >= 0)
			 {
			 
				params = params.replace(/\./g,'dot');
          
			 } 
		  
			getBasicRandomDetails(params);
			
			});
			
			

			//logic for dynamic combo
	//logic for dynamic combo NEW [START]		

	     $("#reql1").change(function () {
                $("#ddlSubRequest").empty();
                $("#ddlSubRequest").append("<option>--None--</option>");
                $.each(reql2, function (key, v) {
                    //loop through all values for 2nd box and add them
                    //alert($("#reql1").val() +'--'+ v.value);
                    if ($("#reql1").val() == v.value.substring(0, 2)) {
                       // $("#ddlSubRequest").append($("<option></option>").attr("value", v).text(v.text));
					//   alert(v.value);
					    $("#ddlSubRequest").append($("<option></option>").attr("value", v.value.substring(3,v.value.length)).text(v.text));
                    }

                });

	  });
	
	//logic for dynamic combo NEW [END]
			
			
  
            
             var loc = window.location;
    var pathName = loc.pathname.substring(0, loc.pathname.lastIndexOf('/') + 1);
    
         
         
			//Create Attachment NEw call
         
			$("#submitattach").click(function()
			{ 	
				//Changed request parameter names //pt
			  
			  if($("input:radio[name='casenum']:checked").val() =="" || $("input:radio[name='casenum']:checked").val() ==null || $("input:radio[name='casenum']:checked").val() ==undefined )
				{
				alert("Please choose the case no for which this email needs to be attached");
				return false;
				}	
			  
			
				var caseurl1 =location.href;
				var casenos =	$("input:radio[name='casenum']:checked").val();
				
				var urlcases1 ="https://email2case.lodhagroup.com:8443/lodhagadgetsalesforce/createAttachment.jsp";
				var formData = {Caseno:casenos,casebody:email_body,sub:subject,crnno:crn_no,msgid:msg_id};
			
				$("#overlay3").css("display","block");
				$("#imgmodal3").css("display","block");
				$.ajax({ 
					type: "GET",
					contentType: "application/json;charset=UTF-8",
					mimeType: 'application/json;charset=UTF-8',
					url:urlcases1,
					data: formData ,
					dataType: "jsonp",
					async:   false,
					 traditional: true,
					jsonpCallback: 'person',
					
					beforeSend: function(xhr) {
						xhr.setRequestHeader("Accept", "application/json");
						xhr.setRequestHeader("Content-Type", "application/json;charset=UTF-8");
						xhr.setRequestHeader('Access-Control-Allow-Origin', '*');
						xhr.setRequestHeader('Access-Control-Allow-Methods', 'GET');
					},
						success: function(datacc){
					$("#overlay3").css("display","none");
					$("#imgmodal3").css("display","none");
		
             
               
							alert(datacc.result); 
                    if(datacc.caseId !="" && datacc.caseId != undefined)
                  {
                  getCaseDetailsbyRegEmail(subject);
                 
                  var x ="https://eu1.salesforce.com/apex/EditCasesForRM?id="+datacc.caseId;
				  
                
                  window.open(x,"_blank","","");
                  } 
               
						},
						error : function(d){
						 
						}
				});
			});
			
						
			//Create Case button on click div will show up and hide all other divs
			$("#CREATECASE111111").click(function(){
         
         //Validation for case to be created by same RM
                   var thisTr =  $('input[name="cb"]:checked').parent().parent();
				   var pr_name = thisTr.children().eq(7).text();
				   var wing_name1 = thisTr.children().eq(9).text();
				    var acctypes2= thisTr.children().eq(14).text();
		var rmemail_1 = thisTr.children().eq(5).text();
   

	   if($('input[name="cb"]:checked').val() =="null")
		{
	   	alert("No BOOKED account selected. Please select appropriate account to create a case.");
		return false;
    
	   }
     if($('input[name="cb"]:checked').val() =="" || $('input[name="cb"]:checked').val() == undefined  )
    {
   
			alert("No account selected. Please select appropriate account to create a case.");
		return false;
    
    }
		
	
		getCancelledcasestatuspopup($('input[name="cb"]:checked').val());
    
		if(rmemail_1 != from_email)
		{	
		//Prod issue debug commented
			
		
		
		 showCreateCase("CREATECASE");
			
			
			
	    
		}
		else
		{
		 showCreateCase("CREATECASE");
		
		}
            

			

			});
         
         $("#tagpng").click(function(){

getCaseDetailsbyRegEmail(subject);
 });
         
         
	  
			//Add to attachment click case start	
			$("#ADDTOEXIST").click(function(){ 
  
  
   var thisTr =  $('input[name="cb"]:checked').parent().parent();
		var rmemail_1 = thisTr.children().eq(5).text();
		  var pr_name1 = thisTr.children().eq(7).text();
		     var wing_name2 = thisTr.children().eq(9).text();
			 var acctypes1= thisTr.children().eq(14).text();
    
	   if($('input[name="cb"]:checked').val() =="null")
		{
	   	
		alert("No BOOKED account selected. Please select appropriate account to create a case.");
		return false;
    
	   }


     if($('input[name="cb"]:checked').val() =="" ||  $('input[name="cb"]:checked').val() ==undefined ||  $('input[name="cb"]:checked').val() =="null" )
    {

	  alert("No account selected. Please select appropriate account to attach the email to a case." );
			return false;
    
    } 
	
   
      
	  
		if(rmemail_1 != from_email)
		{	
			showCreateCase("ADDTOEXIST");
		
		}
		else
		{
			showCreateCase("ADDTOEXIST");
		}
		
		
         if($('input[name="cb"]:checked').val() !="" && $('input[name="cb"]:checked').val() !=null)
             crn_no = $('input[name="cb"]:checked').val();
	
        
				var urlcases ="https://email2case.lodhagroup.com:8443/lodhagadgetsalesforce/rest/crn/getcases/"+crn_no+"";

				$("#overlay2").css("display","block");
				$("#imgmodal2").css("display","block");
				$.ajax({ 
					type: "GET",
					contentType: "application/json",
					url:urlcases,
					dataType: "jsonp",
					
					data : {"crn_no":crn_no},
					jsonpCallback: 'AccountDetail',
					beforeSend: function(xhr) {
						xhr.setRequestHeader("Accept", "application/json");
						xhr.setRequestHeader("Content-Type", "application/json");
						xhr.setRequestHeader('Access-Control-Allow-Origin', '*');
						xhr.setRequestHeader('Access-Control-Allow-Methods', 'GET');
					},
					success: function(data){ 
					$("#overlay2").css("display","none");
				$("#imgmodal2").css("display","none");
				
							var split;
							var caseno;
							var status;
							var caseage;
							var casesum;
							 var caseId1;
            if(data.list.length ==0)
            {
            $('#maintable5 tbody').append('<tr>No Data Found</tr>');
      
		   return;
            }       
        else
     {
      $('#maintable5').find("tr:gt(0)").remove();
   
     }   
                                    
							 for(var i = 0; i < data.list.length; i++)
							{
                     
								var product = data.list[i];
							 
								var product = data.list[i];
								split = product.split(';');

								caseno = split[0];
								status = split[1];
								caseage = split[2];
								casesum =  split[3]; 
                        reql11 =  split[4]; 
                        reql22 =  split[5]; 
                        caseId1=  split[7]; 
						var dates = split[8];
						var natofreq11= split[9];
			/*New logic for the sortable table*/
					var rad ='<input type="radio" name="casenum" value ="'+caseno+'" /> ';
					
						  var xyz1 = '<a href="https://eu1.salesforce.com/apex/EditCasesForRM?id='+caseId1+'" target="_blank" >'+caseno+'</a>';
						  var htmlxx1 = '<input id="submitattachxx" class="button1" style="width: 59px;" type="SUBMIT" value="Attach" onclick ="bindButtonClick()" /> ' ;
			
			                  
				$('#maintable5 tbody').append('<tr><td class="lalign">'+rad+'</td><td>'+xyz1+'</td><td>'+status+'</td><td>'+caseage+'</td><td>'+reql11+'</td><td>'+reql22+'</td><td>'+natofreq11+'</td><td>'+dates+'</td><td>'+htmlxx1+'</td></tr>');                  
					
			

							}
						   var table2 = $('#maintable5').stupidtable();
 
                                         table2.bind('aftertablesort', function (event, data) {
    
 
    var th = $(this).find("th");
    th.find(".arrow").remove();
   
    var arrow = data.direction === "asc" ? "&#8593;" : "&#8595;";
    th.eq(data.column).find('span').remove();
    th.eq(data.column).append('<span class="arrowsort">' + arrow +'</span>');
});
					},
					error : function(d){
									$("#overlay2").css("display","none");
				$("#imgmodal2").css("display","none");
	
					
					}
					});	
				
			});	
 	//Add to attachment click case end	
		
 
		//Create Case click case Start	
			$("#CREATECASE").click(function(){
				          
  
            
            
            
            if(crn_no ==null || crn_no =="")
            {
             if($('input[name="cb"]:checked').val() !="" && $('input[name="cb"]:checked').val() !=null)
               {crn_no =$('input[name="cb"]:checked').val();}
            }   
             
          
            
            var follows ="false";
          
            
           var txtRemarksValue ="";
	   			txtRemarksValue =  $("#txtremarks").val();
				
				if(txtRemarksValue==""||txtRemarksValue==null)
				
				{
					alert("Please Enter Initial Remarks");
					return false;
				 }

				 var comm="";
				 comm=$("#commty option:selected").val();
				if(comm==""||comm=="1"||comm=="--None--"){
					 alert("Please Select Communication Type");
					 return false;
				 }
		
			var nor="";
			nor=$("#natreq option:selected").val();
			
			if(nor==""|| nor=="1"|| nor=="--None--"){
			  alert("Please Select Nature of Request");	
			  return false;
			}

            
            var reqc1="";
            var reqc2="";
            if($("input:radio[name='casetype']:checked").val() == "2")
            {
           reqc1 ="1";
           reqc2="1";
            }
            else
            {
             reqc1 =parseInt($("#reql1 option:selected").val());
             reqc2=$("#ddlSubRequest option:selected").val();
			 
			 if((reqc1 ==""|| reqc1 =="1" || reqc1=="--None--"||reqc1==null)&&(reqc2==""  || reqc2 =="1"|| reqc2==null))
			 {
			 alert("Kindly select the values for the request L1 and L2");
			 return false;
			 }
		else{
			if(reqc1 == "" || reqc1 == "1"){
				alert("Please select  L1 value");
				return false;
			   }
			 
			if(reqc2 == "" || reqc2 == "1" || reqc2=="--None--" || reqc2==null){
				alert("Please select  L2 value");
							return false;
			  }
			 
			 }
            }
			

			
			
			var validateCDate = $("#txtdtcomplaint").val();
		
			var validateGDate = $("#txtdtgriev").val();
			
			var matchvalidateDate ="";
			if($("#natreq option:selected").val() =="3")
			{
			
			matchvalidateDate=validateCDate.match(/^\d{1,2}\/\d{1,2}\/\d{4} \d{1,2}:\d{1,2} ([APap][mM])?$/g);
			
				if(matchvalidateDate =="" || matchvalidateDate ==null)
				{
					alert("Please choose correct Date format dd/mm/yyyy hh:mm AM/PM");
					return false;
				}
			
			
			if($("#txtcaseres").val() =="" || $("#txtcasesumm").val() == "" || $("#sNAFD option:selected").val() =="" || $("#sNAFD option:selected").val() =="0")
			{
			alert("Kindly choose the mandatory values");
			return false;
			}
			
			
			}
			else if($("#natreq option:selected").val() =="8")
			{
			
				if($("#txtcaseres").val() =="" || $("#txtcasesumm").val() == "")
				{
				alert("Kindly choose the mandatory values");
				return false;
				}
		
			
				matchvalidateDate=validateGDate.match(/^\d{1,2}\/\d{1,2}\/\d{4} \d{1,2}:\d{1,2} ([APap][mM])?$/g);
				if(matchvalidateDate =="" || matchvalidateDate ==null)
				{
					alert("Please choose correct Date format dd/mm/yyyy hh:mm AM/PM");
					return false;
				}
				
				
				
			}			
			
		
            
            
				var url1 = "https://email2case.lodhagroup.com:8443/lodhagadgetsalesforce/createjsonCase.jsp";
				//Changed request parameter names //pt
            var remarks=$("#txtremarks").val();
  
  
  
   //added for prod issue right case owner 22Augst2014 [start]
  var xznew = email_id +";"+from_email;
  
   //added for prod issue right case owner 22Augst2014 [END]
  
	var formData = {natreq:$("#natreq option:selected").val(),commty:$("#commty option:selected").val(),intmd:$("#intmd option:selected").val(),reql1:reqc1,reql2:reqc2,caset:$("input:radio[name='casetype']:checked").val(),sub:subject,crnno:crn_no,msgid:msg_id,from:xznew,casebody:email_body,rem:remarks,cres:$("#txtcaseres").val(),csum:$("#txtcasesumm").val(),dtComp: $("#txtdtcomplaint").val(),dtgriev:$("#txtdtgriev").val(),NAFD:$("#sNAFD option:selected").val()};
	
   //added for prod issue right case owner 22Augst2014 [END]

				
				//CreateCase Validation
			  
          
           
				 
				if( $("input:radio[name='casetype']:checked").val() =="" || $("input:radio[name='casetype']:checked").val() ==null || crn_no == "" || crn_no ==null ||  crn_no == "null")
				{
				alert("Please select the type (single/multiple) of case that you want to create.");
					
					return;
				}
				
				//CreateCase Validation
				 $("#overlay1").css("display","block");
				$("#imgmodal1").css("display","block");
				
				$.ajax({ 
					type: "GET",
					contentType: "application/json;charset=UTF-8",
					mimeType: 'application/json;charset=UTF-8',
					url:url1,
               traditional: true,
					data: formData ,
					dataType: "jsonp",
					
					jsonpCallback: 'person',
					
					beforeSend: function(xhr) {
						xhr.setRequestHeader("Accept", "application/json");
						xhr.setRequestHeader("Content-Type", "application/json;charset=UTF-8");
						xhr.setRequestHeader('Access-Control-Allow-Origin', '*');
						xhr.setRequestHeader('Access-Control-Allow-Methods', 'GET');
					},
					success: function(data){ 
					 $("#overlay1").css("display","none");
				$("#imgmodal1").css("display","none");
            

						alert("" + data.result);
						
                   if(data.caseId !="")
                  {
				  
				  //Hiding the create case tab once the case is created.
				  $("#Create_Case1").hide();				 
	
                    getCaseDetailsbyRegEmail(subject);
                 
                   if($("input:radio[name='casetype']:checked").val() != "2")
				   {
            
				  var x ="https://eu1.salesforce.com/apex/EditCasesForRM?id="+data.caseId;
                
                  window.open(x,"_blank","","");
				  }
				  else
				  {
				  var x = "https://eu1.salesforce.com/apex/CM_ChildCaseCreatePage?acctId="+data.AccountId+"&ParentId="+data.caseId+"&ptype=Multiple Request";
				
                  window.open(x,"_blank","","");
				  
				  }
                  } 
                  
					},
					error : function(json){
							 $("#overlay1").css("display","none");
				$("#imgmodal1").css("display","none");
					 //  alert("Error occured "+json);
					}
				});
				function person(jss){}
			}); 
			//Create Case click case END
			
		/***************************************************************************************************************/
		//Get the matched content from the email START
		/***************************************************************************************************************/
       // Fetch the array of content matches. 
        matches = google.contentmatch.getContentMatches();
        var matchList = document.createElement('UL');
        var listItem;
        var extractedText;
		var email_id;
		var subject;
      var msg_id;
      var from_email;
		var email_body;
        //<!-- Iterate through the array and display output for each match. -->
        for (var match in matches) {
			for (var key in matches[match]) {
				listItem = document.createElement('LI');
			
				if( key =="sender_email")
				{
					email_id =matches[match][key];
				
               email_id =  email_id.replace(/\./g,'dot');
               
           
				}
        
		 //replacing recipient_email to recipient_to_email
            if(key == 'recipient_to_email')
                    {
                   
                    from_email  =matches[match][key];
                     
                     from_email = from_email.match(/([a-zA-Z0-9._-]+@[a-zA-Z0-9._-]+\.[a-zA-Z0-9._-]+)/gi);
                   
                     getUserRole(from_email);
                  
               
                    }
				if(key == "email_body")
				{
					email_body =matches[match][key];    
				}
				if(key == "subject")
				{
					subject =matches[match][key];
        
				}
            if(key == 'message_id')
                    {
                                                //Stores the message id from the email thread
                    msg_id = matches[match][key];
                    }
            
           
				
            }
        }
        
       
		
    /***************************************************************************************************************/
		//Get the matched content from the email END
		/***************************************************************************************************************/
		
      //hot fix prashant
				 var newcentralemailidfinale="";
		var matt ="";
	 
		if(email_body!=null && email_body!="")
		{
		matt= email_body.match(/((cus:)\S+(:cus))/g);
	 
		}
  
		
if(matt!=null && matt!="")
{

	var newcentralemailid = matt[0];
	
	newcentralemailidfinale = newcentralemailid.replace("cus:","");
	newcentralemailidfinale = newcentralemailidfinale.replace(":cus","");   
  
	
	newcentralemailidfinale = newcentralemailidfinale.replace(/\./g,'dot');

	 email_id = newcentralemailidfinale;
    
 getCaseDetailsbyRegEmail(subject);   
  
  getCancelledcasestatuspopup(newcentralemailidfinale);
    	getBasicRandomDetails(newcentralemailidfinale);
  
}
else
{		
 
getCancelledcasestatuspopup(email_id);
getBasicRandomDetails(email_id);
	
}
    
      
      
		var email_id1 =  email_id.replace(/dot/g,'.');// Hardcod
      
	
  function AccountDetail(json)
  {             
                for(var i = 0; i < json.length; i++) {
    var obj = json[i];

    console.log(obj.flatno);}}
	
	$( "#MEAN" ).mouseover(function() {


});
	
	
	
	
	$( ".odd" ).mouseover(function() {


});

	
	
			  

	
	
	
	
	
  });




	
		   function showEmail(){
          alert("work in progress");
	  
        }
		function makeJSONRequest(){
          alert("work in progress make json request");
        }
    
	
		 function CloseMe()
		 {
			$('.popover').css("display","none");
		 
		 
		 }	

      </script>
	  
	  <!-- REMOVEFROMHERE PRASHANT-->
	  
	  <style>
	  
.popover
{
    display: none;
    left: 640px;
    position: absolute;
    top: -36px;
    z-index: 1010;
display: none;
/*max-width: 276px;

padding: 1px;
text-align: left;
background-color: rgb(255, 255, 255);
-webkit-background-clip: padding-box;
background-clip: padding-box;
border: 1px solid rgba(0, 0, 0, 0.2);
border-image-source: initial;
border-image-slice: initial;
border-image-width: initial;
border-image-outset: initial;
border-image-repeat: initial;
border-radius: 6px;
-webkit-box-shadow: rgba(0, 0, 0, 0.2) 0px 5px 10px;
box-shadow: rgba(0, 0, 0, 0.2) 0px 5px 10px;
white-space: normal;
*/
}
#popover
{
		width:300px;
		height:400px;
		background: none repeat scroll 0 0 #b3d4fc;
}

#popover h4
{
	background: none repeat scroll 0 0 #0f417e;
    color: #fff;
    font-size: 25px;
    font-weight: bold;
    line-height: 46px;
    text-align: center;
}


#popover1
{	   border: 1px none;
    border-radius: 7px;
		width:300px;
		height:400px;
		/*background: none repeat scroll 0 0 #b3d4fc;*/
		
		background: linear-gradient( #abcdef, #abcdef) repeat scroll 0 0 rgba(0, 0, 0, 0);
}

#popover1 h4
{
   border-bottom: 3px solid #fff !important;
    border-left-color: #fff;
    border-right-color: #fff;
    border-top-color: #fff;
    color: #0f417e;
    font-size: 25px;
    font-weight: bold;
    line-height: 34px;
    margin-left: 0;
    text-indent: 7px;
}
.triangle-left {
 border-bottom: 6px solid transparent;
    border-right: 12.5px solid #c6c6c6;
    border-top: 6px solid transparent;
    height: 4px;
    
    position: absolute;
    width: 0;
}
#DET{
float: left;
    height: 264px;
    margin-top: -12px;
    overflow-y: scroll;

}

#DET label {
 clear: both;
    color: #888888;
    display: block;
    height: 24px;
    margin-bottom: -1px;
    text-align: left;
    text-indent: 19px;
    width: 208px;
}
#DET span {
color: #404040;
    display: block;
    height: 28px;
    margin-bottom: 6px;
    text-indent: 20px;
    width: 274px;
}

#popover1 h3
{
  color: #fffcff;
    font-weight: bold;
    text-indent: 22px;
}






#popover3
{	 

background: none repeat scroll 0 0 #FFF;
    border: 1px none;
    border-radius: 7px;
     height: 350px;
    width: 300px;
 box-shadow: 9px 7px 10px #888888;
 margin-bottom:50px;
}

#popover3 h3
{
 border-bottom: 2px solid #4a8af4;
    font-size: 18px;
    font-weight: normal;
    height: 28px;
    line-height: 27px;
    margin: 0 0 24px;
    text-decoration: none;
    text-indent: 18px;
    width: 283px;

}

#popover3 h4
{	   

 background: linear-gradient(#f7f7f7, #f7f7f7) repeat scroll 0 0 rgba(0, 0, 0, 0);
    border: 1px solid #ebebeb;
    font-size: 14px;
    font-weight: 400;
    height: 42px;
    line-height: 35px;
    margin-bottom: 14px;
    text-indent: 20px;
}
#popover3 h4 a{ 
 float: right;
    font-size: 14px;
    margin-right: 2px;
    text-decoration: none;
}

/*
 *  STYLE 5
 */

.style-5::-webkit-scrollbar-track
{
	-webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.3);
	background-color: #F5F5F5;
}

.style-5::-webkit-scrollbar
{
	width: 10px;
	background-color: #F5F5F5;
}

.style-5::-webkit-scrollbar-thumb
{
	background-color: #0ae;
	
	background-image: -webkit-gradient(linear, 0 0, 0 100%,
	                   color-stop(.5, rgba(255, 255, 255, .2)),
					   color-stop(.5, transparent), to(transparent));
}

	  </style>
	  	  <div class ="popover">
<div id="popover3">
<h4>Record Details <a href="#" onclick='CloseMe()' >X</a></h4>


<div id="DET" class="style-5">
<h3>Account</h3>
 
    <label for="lastname">last name : </label> 
    <span>as</span>
  
    <label for="firstname">first name : </label>
   <span>as</span>
    
    <label for="address">address : </label> 
  <span>as</span>
        <label for="address">address : </label> 
  <span>as</span>
  <label for="firstname">first name : </label>
   <span>as</span>
   <label for="firstname">first name : </label>
   <span>as</span>
   <label for="firstname">first name : </label>
   <span>as</span>
  </div>


</div>

</div>
	    <!-- REMOVEFROMHERE PRASHANT-->
	  
 <div id="overlay" class="overmemodal" ><img src='https://raw.githubusercontent.com/adminlodhagroup/email2caseprod/master/ajax-loader.gif' id="imgmodal" width="64" height="64" class="overmemodala" /><br>Loading..</div>
  <div id="overlay1" class="overmemodal" ><img src='https://raw.githubusercontent.com/adminlodhagroup/email2caseprod/master/ajax-loader.gif' id="imgmodal1" width="64" height="64" class="overmemodala"  /><br>Loading..</div>

 <div id="overlay2" class="overmemodal" ><img src='https://raw.githubusercontent.com/adminlodhagroup/email2caseprod/master/ajax-loader.gif' id="imgmodal2" width="64" height="64" class="overmemodala"  /><br>Loading..</div>
  <div id="overlay3" class="overmemodal" ><img src='https://raw.githubusercontent.com/adminlodhagroup/email2caseprod/master/ajax-loader.gif' id="imgmodal3" width="64" height="64" class="overmemodala"  /><br>Loading..</div>
   <div id="overlay4" class="overmemodal" ><img src='https://raw.githubusercontent.com/adminlodhagroup/email2caseprod/master/ajax-loader.gif' id="imgmodal4" width="64" height="64"  class="overmemodala"  /><br>Loading..</div>
    <div id="overlay5" class="overmemodal" ><img src='https://raw.githubusercontent.com/adminlodhagroup/email2caseprod/master/ajax-loader.gif' id="imgmodal5" width="64" height="64"  class="overmemodala"  /><br>Loading..</div>
	 <div id="overlay6" class="overmemodal" ><img src='https://raw.githubusercontent.com/adminlodhagroup/email2caseprod/master/ajax-loader.gif' id="imgmodal6" width="64" height="64" class="overmemodala"   /><br>Loading..</div>
	  <div id="overlay7" class="overmemodal" ><img src='https://raw.githubusercontent.com/adminlodhagroup/email2caseprod/master/ajax-loader.gif' id="imgmodal7" width="64" height="64"  class="overmemodala"  /><br>Loading..</div>
	   <div id="overlay8" class="overmemodal" ><img src='https://raw.githubusercontent.com/adminlodhagroup/email2caseprod/master/ajax-loader.gif' id="imgmodal8" width="64" height="64" class="overmemodala"   /><br>Loading..</div>
	    <div id="overlay9" class="overmemodal" ><img src='https://raw.githubusercontent.com/adminlodhagroup/email2caseprod/master/ajax-loader.gif' id="imgmodal9" width="64" height="64" class="overmemodala"   /><br>Loading..</div>
		 <div id="overlay10" class="overmemodal" ></div>
				<div style="top: 0;left: 0;margin-bottom: 3px;z-index: 100;font-size: 17px;font-weight: bold;background-color: #F2F2F2;color: #5C9E00;"> Tag This Email to a Case</div>	
                  <div id="pre-sidepanel">
                    <ul id="verticalmenu">
                        <li class="menuimage">
                            <a href="#tab1"><img src="https://raw.githubusercontent.com/adminlodhagroup/email2caseprod/master/search.png"></a>
                        </li>
                        <li class="menuimage">
                            <a href="#tab2" id="tagpng"><img src="https://raw.githubusercontent.com/adminlodhagroup/email2caseprod/master/tag.png"></a>
                        </li>
                        <li class="menuimage">
                            <a href="#tab3"><img src="https://raw.githubusercontent.com/adminlodhagroup/email2caseprod/master/camera.png"></a>
                        </li>
                        <!--<li class="menuimage">
                            <img src="images/calendar.png">
                        </li>
                        <li class="menuimage">
                            <img src="images/user.png">
                        </li>-->
                    </ul>
                <div id="toppanel"></div>
                <div id="sidepanel">
                    <div class="tabcontent" id="tab1" style="display:block">
                    
                     <input type="text" id="inpname" />
                     <input type="SUBMIT" id="SUBMITSEARCH" value ="Search" class="button1"  />
 
                        <br />
 
 
 
 
 
 
                    <div id="content_div" style ="width: 100%;overflow: auto;height: 224px;" class="content_div_invisible"> </div> 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
                    <input type="button" id="CREATECASE111111" class="button1" value="Create Case" />  
 
                    <input type="button" id ="ADDTOEXIST"class="button1" value="Add to Existing Case" />
                    <div id="userrole" class ="hideselect" >
 
                        <input type="button" id ="FORWARDTO"class="button1" value="Forward To RM"  />
                    </div>
 
                        <div id="Create_Case1">
                    <form action="" method="GET" class="elegant-aero">
                    <h1>Lodha</h1>
                    <label><span style="margin-top:0px;">Case Type:</span></label>
 
 
 
 
 
 
                    <div style="margin=5px;padding-left:100px;">
                        <input type="radio" name="casetype" id="rdobuy" value="2"/>Multiple request
                        <input type="radio" name="casetype" value="1"/>Single Request
                    </div>
                    <br>
 
                    <label style ="margin-top:6px;">
                        <span>Interaction Mode:</span>
                        <select name="intmd" id ="intmd" disabled="disabled"> 
                             <option value="1" >--None--</option>
                             <option value="2" selected >Email </option>
                             <option value="3" >Call</option>
                             <option value="4" >Walkin</option>
                             <option value="5" >Letter</option>
                             <option value="6" >Mobile</option>
                         </select>
                    </label>
                    <label style="display:none;">
                        <span>Follow Up:</span>
                        <input type="checkbox" name="followup" id ="chkfollow" value="true">
                    </label>
                    <label>
                        <span>Remarks:</span>
                        <input type="text" name="remarks" id ="txtremarks" >
                    </label>
  <div class="clearer"></div>
 
 
 
                    <label>
                        <span>Communication Type:</span>
                        <select name="commty" id ="commty" width="20">
                             <option value="1" >--None--</option>
                             <option value="2" selected>Inbound</option>
                             <option value="3" >Outbound</option>
                        </select>
                    </label>
                
                    <label>
                        <span>Nature Of Request:</span>
                        <select name="natreq"  id ="natreq" width="20">
                            <option value="1" >--None--</option>
                            <option value="2" >Request</option>
                            <option value="3" >Complaint</option>
                            <option value="4" >Query</option>
                            <option value="5" >Feedback</option>
                            <option value="6" >Repeat</option>
                            <option value="7" >Appreciation</option>
                            <option value="8" >Grievance</option>
                        </select>
                    </label> 
					 <div class="clearer"></div>
                
                    <label class="commongroup1">
                        <span>Case Summary</span>
                       <!-- <input type="text" name="CaseSummary" id ="txtcasesumm" > -->
					   <textarea id="txtcasesumm" name="CaseSummary" rows="4" cols="50"></textarea>
                    </label>
                
                    <label class="commongroup1">
                        <span>Case Resolution</span>
                      <!--  <input type="text" name="txtcaseres" id ="txtcaseres" > -->
                        <textarea id="txtcaseres" name="txtcaseres" rows="4" cols="50"></textarea>
                    </label>
                 <div class="clearer"></div>
                    <label class="complaintngroup">
                        <span>Date Of Complaint</span>
                        <input type="text" name="txtdtcomplaint" class="date-pick dp-applied" id ="txtdtcomplaint" >
                    </label>
               
			   <label class="complaintngroup">
					<br>
					<br>
					<br>
                        <span>Needs Approval From Director</span>
                        <select name="sNAFD"  id ="sNAFD" width="20">
                            <option value="0" >--None--</option>
                            <option value="1" >YES</option>
                            <option value="2" >NO</option>
                        </select>
                     </label>
					 <div class="clearer"></div>
                    <label class="grievgroup">
                        <!--<span>Date Of Grievance {dd/mm/yyyy hh:mm AM/PM format}</span>-->
                        <span>Date Of Grievance</span>
                        <input type="text" name="txtdtgriev" class="date-pick dp-applied" id ="txtdtgriev" >
                    </label>
 
                    <label>
					<br>
					<br>
					<br>
                        <span id="reql1label">Request for L1:</span>
                       <select name="reql1" required="required" id="reql1"  width="20">
                            <option value="01" class="none1">--None--</option>
                            <option value="02" class="none2">Cancellation Related</option>
                            <option value="03" class="none3" >Collections Related</option>
                            <option value="04" class="none4">Document Related</option>
                            <option value="05" class="none5">Brokerage related</option>
                            
                            <option value="06" class="none6">Collections Related - SDR</option>
                            <option value="07" class="none7">Customer IT Tools</option>
							<option value="08" class="none8">Customer Service</option>
							<option value="09" class="none9">DND</option>
                            <option value="10" class="none10">Legal case</option>
							<option value="11" class="none11">Legal notice</option>
                            <option value="12" class="none12">Misselling</option>
							<option value="13" class="none13">Payment Related</option>
							<option value="14" class="none14">Police complaint</option>
                            <option value="15" class="none15">Possessions Related</option>
                            <option value="16" class="none16">Registration Related</option>
                            <option value="17" class="none17">Schemes/Initiatives/Events/Campaigns</option>
                            <option value="18" class="none18">Transfers</option>
                            <option value="19" class="none19">Updation of info on systems</option>
                            <option value="20" class="none20">Welcome calling</option>
							
							
							
							
							
							
							
                        </select>
                    </label>    
                    <label>
                        <span id="reql2label">Request for L2:</span>
                        <select name="ddlSubRequest" width="20" id="ddlSubRequest">
                       
                        </select>
                        <select name="reql2" required="required" id="reql2" style="display:none;">
                            <option class="none1" value="01-1">--None--</option>
                            <option class="none2" value="02-2">Procedural information</option>
                            <option class="none2" value="02-3">Refund in normal cases</option>
                            <option class="none2" value="02-4">Refund in exceptional cases</option>
                            <option class="none2" value="02-5">Booking to be cancelled with appropriate forfeiture</option>
                            <option class="none2" value="02-6">Booking to be retained with balance payment with interest</option>
                            <option class="none2" value="02-7">Deviation to be sought to enable retention</option>
                            <option class="none2" value="02-8">Retention in progress within policy timelines</option>
							<option class="none2" value="02-9">Greetings</option>

                            
                            <option class="none3" value="03-10">Interest Waiver</option>
                            
                            <option class="none3" value="03-11">Specialized Registration Procedure related</option>
							<option class="none3" value="03-12">PTP</option>
							<option class="none3" value="03-13">Alredy made</option>
							<option class="none3" value="03-14">Will not pay</option>
							<option class="none3" value="03-15">Taxation</option>
							<option class="none3" value="03-16">TDS Authorization</option>
							<option class="none3" value="03-17">TDS Challan</option>
							<option class="none3" value="03-18">Greetings</option>

                            <option class="none4" value="04-19">Customer wants original document</option>
                            <option class="none4" value="04-20">Customer wants duplicate document</option>
                            <option class="none4" value="04-21">Pick up to be arranged to collect the document</option>
                            <option class="none4" value="04-22">Document despatched by customer</option>
                            <option class="none4" value="04-23">Document not delivered</option>
                            <option class="none4" value="04-24">Mistake in document delivered</option>
                            <option class="none4" value="04-25">Delay in delivery of document</option>
                            <option class="none4" value="04-26">Call back the document sent by Lodha</option>
                            <option class="none4" value="04-27">Document received by customer</option>
                            <option class="none4" value="04-28">Document in transit to customer</option>
                            <option class="none4" value="04-29">Clearance required before document despatch</option>
							<option class="none4" value="04-30">Greetings</option>
							

                            <option class="none5" value="05-31">Brokerage related</option>
							<option class="none5" value="05-32">Greetings</option>

                           
							
                            <option class="none6" value="06-33">SDR - PTP</option>
                            <option class="none6" value="06-34">SDR- Already made</option>
                            <option class="none6" value="06-35">SDR- Will not pay</option>
                            
                            <option class="none7" value="07-36">Campaign related</option>
                            <option class="none7" value="07-37">Construction Updates</option>
                            <option class="none7" value="07-38">Login/Data related</option>
							
							<option class="none7" value="07-39">Greetings</option>>
							

							<option class="none8" value="08-40">RM Related</option>
							<option class="none8" value="08-41">IVR</option>

							<option class="none9" value="09-42">Activation</option>

                            <option class="none10" value="10-43">Ongoing legal case</option>
							<option class="none10" value="10-44"> Customer threatening to file a legal case  </option>
							<option class="none10" value="10-45">Customer is in process of filing a legal case </option>
							<option class="none10" value="10-46">Customer requesting for out of court settlement    </option>
							
							<option class="none10" value="10-47">Case closed</option>
							<option class="none10" value="10-48">Seeking an update on the legal case</option>


							<option class="none11" value="11-49">Customer's first time legal notice received</option>
							<option class="none11" value="11-50">Lodha's reply to customer's legal notice sent</option>
							<option class="none11" value="11-51">Customer's reply to Lodha's legal notice received</option>
							<option class="none11" value="11-52">More time required by customer to reply to our legal notice</option>
							<option class="none11" value="11-53">Supporting documents requested from customer</option>
							<option class="none11" value="11-54">Customer seeking status update on notice</option>
							<option class="none11" value="11-55">Legal issue resolved</option>
							<option class="none11" value="11-56">Customer threatening to send a legal notice</option>
							<option class="none11" value="11-57">Potential Legal case</option>

                            <option class="none12" value="12-58">After Sales order creation</option>
                            <option class="none12" value="12-59">Before Sales order creation</option>

							<option class="none13" value="13-60">Payment info on portal</option>
							<option class="none13" value="13-61">Payment Procedure related</option>

							<option class="none14" value="14-62">Police complain already filed</option>
							<option class="none14" value="14-63">Customer threatening to file a police complain</option>
							<option class="none14" value="14-64"> Status Update on the police complaint filed</option>
							
                            <option class="none15" value="15-65">Pre-possession</option>
                            <option class="none15" value="15-66">Post-possession</option>
                            <option class="none15" value="15-67">During Possession process</option>                
							<option class="none15" value="15-68">Greetings</option>

                            <option class="none16" value="16-69">Clause related</option>
							<option class="none16" value="16-70">Procedure related</option>
                            <option class="none16" value="16-71">Scheduling (SDR already paid)</option>
                            <option class="none16" value="16-72">SDR Charges related</option>
                            
							<option class="none16" value="16-73">Greetings</option>

                            <option class="none17" value="17-74">Loyalty campaign/Referrals - Pre launch</option>
                            <option class="none17" value="17-75">Loyalty campaign/Referrals - Post launch</option>
                            <option class="none17" value="17-76">Loyalty campaign/Referrals - Post possession</option>
                            <option class="none17" value="17-77">Customer Care event</option>
                            <option class="none17" value="17-78">Marketing event</option>
                            <option class="none17" value="17-79">Gifts</option>

							<option class="none17" value="17-80">My Gain facility/ADF facility/Amnesty/Dollar product/Home loan interest offer</option>
							
							

                            <option class="none18" value="18-81">Customer initiated transfer</option>
                            <option class="none18" value="18-82">Lodha Initiated transfer</option>
                            <option class="none19" value="19-83">SAP</option>
                            <option class="none19" value="19-84">SFDC</option>

                            <option class="none20" value="20-85">Booking Confirmation</option>
							<option class="none20" value="20-86">Greetings</option>
							
                        </select>


                    </label> 
		<div class="clearer"></div>					
                    <label>
                        <span>&nbsp;</span> 
                        <input type="button" id="CREATECASE" class="button" value="Submit" />  
 
 
                    </label>    
                </form>
            </div>
 
 
            <!-- Create Case Start here -->
 
            <div id="ATTACHTOCASE">
            <!-- Table layout inside the attach to case-->
            <table id="maintable5" class ="CSSTableGenerator"  cellspacing="0" cellpadding="0" >
             <thead>
                  <tr>
 
            <th></th>
            <th>Case No</th>
            <th>Status</th>
		
            <th >Case Age</th>
            <th data-sort="string" style="cursor:pointer;width: 2%;">Request for l1</th>
            <th data-sort="string" style="cursor:pointer;">Request for l2</th>
			<th>Nature of Request</th>
			<th style="cursor:pointer;width: 164%;" data-sort="string" >Date</th>
<th  style="width: 2%;"></th>
 
            </tr>
             </thead>
              <tbody>
 
               </tbody>
 
 
            </table>
 
            <div id="HiddenContainer" style ="display:none"> </div>
            <div class="container" id="container" style ="display:none" >
            <h1>
            Attachment
            </h1>
            <div class="inner">
            <div class ="column headss">
                 &nbsp
                 </div>
                 <div class ="column headss">
                 Case No
                 </div>
                 <div  class ="column headss">
                 Status
                 </div>
                 <div  class ="column headss">
                 Case Age
                 </div>
            <div  class ="column headss">
                 Request L1
                 </div>
            <div  class ="column headss">
                 Request L2
                 </div>
                
              </div>
              </div>
 
            <div id='loadingmessage' style='display:none'>
              <img src='https://raw.githubusercontent.com/adminlodhagroup/email2caseprod/master/loading.gif'/>
            </div>
 
 
            <input type="SUBMIT" value="SUBMIT" id="submitattach" class ="button1" style ="display:none;" />
 
 
            </div>
                    
                </div>
                <div class="tabcontent" id="tab2">
                    <div id="CaseDetails" > 
                   
 
                       
                        
                        <!-- new table structure-->
                        <table id="maintable1" class ="CSSTableGenerator"  cellspacing="0" cellpadding="0" >
                         <thead>
                              <tr>
 
                        <th data-sort="string">CRN</th>
                        <th><span>Case No</span></th>
                        <th data-sort="string">Status</th>
 
                        <th style="display:none" >Case Summary</th>
                        <th >Nature of Request</th>
                        <th  style="display:none">Communication type</th>
                        <th data-sort="string" style="cursor:pointer;">Request for l1</th>
                        <th data-sort="string" style="cursor:pointer;">Request for l2</th>
 
                        <th data-sort="string" style="cursor:pointer;" >Date</th>
                        </tr>
                         </thead>
                          <tbody>
                           </tbody>
                        </table>
                    </div>   
 
                </div>
 
                <div class="tabcontent" id="tab3">
                    <p style="font-size: 14px;line-height: 20px;margin-bottom: 5px;font-weight: 700;border-bottom: 2px solid rgb(74, 138, 244);text-transform: capitalize;">Cases</p>
                    <div style="background-color: rgb(249, 203, 137);border: 1px solid rgb(250, 163, 40);border-image-source: initial;border-image-slice: initial;border-image-width: initial;border-image-outset: initial;border-image-repeat: initial;background-image: linear-gradient(rgb(250, 169, 55), rgb(250, 169, 55));color: rgb(255, 255, 255);width: 100px;height: 100px;float: left;margin-right: 8px;">
                        <span style="background-color: rgb(249, 203, 137);border: 1px solid rgb(250, 163, 40);border-image-source: initial;border-image-slice: initial;border-image-width: initial;border-image-outset: initial;border-image-repeat: initial;background-image: linear-gradient(rgb(250, 169, 55), rgb(250, 169, 55));color: rgb(255, 255, 255);margin-left: 30px;font-weight: bold;">Open</span>
 
 
                        <span style="display: block;font-weight: 700;font-size: 53px;margin: 5px 23px;" id="txtspanclosedcases"></span>
                    </div>
 
                    <div style="background-color: rgb(249, 203, 137);border: 1px solid rgb(250, 163, 40);border-image-source: initial;border-image-slice: initial;border-image-width: initial;border-image-outset: initial;border-image-repeat: initial;background-image: linear-gradient(rgb(250, 169, 55), rgb(250, 169, 55));color: rgb(255, 255, 255);width: 100px;height: 100px;float: left;margin-right: 8px;">
                        <span style="background-color: rgb(249, 203, 137);border: 1px solid rgb(250, 163, 40);border-image-source: initial;border-image-slice: initial;border-image-width: initial;border-image-outset: initial;border-image-repeat: initial;background-image: linear-gradient(rgb(250, 169, 55), rgb(250, 169, 55));color: rgb(255, 255, 255);margin-left: 30px;font-weight: bold;">Closed</span>
 
 
                        <span style="display: block;font-weight: 700;font-size: 53px;margin: 5px 35px;"id="closedCasesCountDiv"></span>
                    </div>
                </div>
                </div>
                </div>
                    
                    
            <!-- New UI for vertical tabbed menu -->
 
              
                  
            <div id="MEAN" class="odd">
            </div>
			 <!-- REMOVEFROMHERE PRASHANT-->


    ]]>
  </Content>
</Module>
